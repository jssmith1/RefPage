{"version":3,"sources":["assets/minus.svg","assets/plus.svg","assets/home.svg","ResourceFooter.jsx","ReturnMissing.jsx","TypeNotFound.jsx","VariableNotFound.jsx","TypeMismatch.jsx","VariableNotInit.jsx","ParameterMismatch.jsx","Home.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","ResourceFooter","className","href","React","Component","BlueCheckbox","withStyles","root","color","blue","checked","props","Checkbox","ReturnMissing","openStrategyTile","bind","openCodeExample","changeChecked","state","openStrategy1","openStrategy2","openCode11","openCode21","checked11","checked21","i","this","setState","returnType","onClick","src","PlusButton","alt","width","height","MinusButton","value","onChange","TypeNotFound","openStrategy3","openCode22","openCode31","checked22","checked31","varName","correctName","VariableNotFound","openStrategy4","openCode41","openCode42","checked41","checked42","classparam","TypeMismatch","openCode12","checked12","VariableNotInit","ParameterMismatch","to","Home","exact","path","id","App","HomePageContent","query","URLSearchParams","useLocation","search","HomeButton","get","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.46a34026.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/minus.d6f7642b.svg\";","module.exports = __webpack_public_path__ + \"static/media/plus.94676a13.svg\";","module.exports = __webpack_public_path__ + \"static/media/home.1a4fd139.svg\";","import React from \"react\";\nimport \"./App.css\";\n\nclass ResourceFooter extends React.Component {\n  render() {\n    return (\n        <i>\n        <h4>Still unable to fix this error? More resources</h4>\n        <div className=\"Indent-1\">\n          <a href=\"https://stackoverflow.com/\">Stack Overflow</a>\n        </div>\n        <div className=\"Indent-1\">\n          <a href=\"https://github.com/processing/processing/wiki/Common-Errors\">\n            Processing Common Errors\n          </a>\n        </div>\n      </i>\n    );\n  }\n}\n\nexport default ResourceFooter;\n","import React from \"react\";\nimport MinusButton from \"./assets/minus.svg\";\nimport PlusButton from \"./assets/plus.svg\";\nimport \"./App.css\";\nimport ResourceFooter from \"./ResourceFooter.jsx\";\n\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { blue } from \"@material-ui/core/colors\";\n\nconst BlueCheckbox = withStyles({\n  root: {\n    color: blue[400],\n    \"&$checked\": {\n      color: blue[600],\n    },\n  },\n  checked: {},\n})((props) => <Checkbox color=\"default\" {...props} />);\n\nconst LEFT_CURLY = \"{\";\nconst RIGHT_CURLY = \"}\";\n\nclass ReturnMissing extends React.Component {\n  constructor(props) {\n    super(props);\n    this.openStrategyTile = this.openStrategyTile.bind(this);\n    this.openCodeExample = this.openCodeExample.bind(this);\n    this.changeChecked = this.changeChecked.bind(this);\n    this.state = {\n      openStrategy1: false,\n      openStrategy2: false,\n      openCode11: false,\n      openCode21: false,\n      checked11: false,\n      checked21: false,\n    };\n  }\n\n  openStrategyTile(i) {\n    switch (i) {\n      case 1:\n        this.setState({ openStrategy1: !this.state.openStrategy1 });\n        this.setState({ openCode11: false });\n        break;\n      case 2:\n        this.setState({ openStrategy2: !this.state.openStrategy2 });\n        this.setState({ openCode21: false });\n        break;\n      default:\n        break;\n    }\n  }\n\n  openCodeExample(i) {\n    switch (i) {\n      case 11:\n        this.setState({ openCode11: !this.state.openCode11 });\n        break;\n      case 21:\n        this.setState({ openCode21: !this.state.openCode21 });\n        break;\n      default:\n        break;\n    }\n  }\n\n  changeChecked(i) {\n    switch (i) {\n      case 11:\n        this.setState({ checked11: !this.state.checked11 });\n        break;\n      case 21:\n        this.setState({ checked21: !this.state.checked21 });\n        break;\n      default:\n        break;\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"AppContent\">\n          <div className=\"Title\">\n            <h2>\n              This method must return a result of type{\" \"}\n              <div className=\"InputValue\">{this.props.returnType}</div>\n            </h2>\n          </div>\n\n          <h4>\n            <i>\n              Translation: You did not return a value of type{\" \"}\n              <div className=\"InputValue\">{this.props.returnType}</div> like the\n              definition of method{\" \"}\n              <div className=\"InputValue\">{this.props.className}</div>.\n            </i>\n          </h4>\n\n          <div className=\"Tile\">\n            <div className=\"ErrorTile\" onClick={() => this.openStrategyTile(1)}>\n              <div className=\"ErrorMessage\">\n                <h4>\n                  1: You may have forgotten the return statement for the method{\" \"}\n                  <p className=\"InputValue\">{this.props.className}</p>\n                </h4>\n                <div>\n                  Hint: Do you have the return statement at the end of the\n                  method <p className=\"InputValue\">{this.props.className}</p>?\n                </div>\n              </div>\n              {!this.state.openStrategy1 && (\n                <div className=\"ButtonHolder\">\n                  <img\n                    onClick={() => this.openStrategyTile(1)}\n                    src={PlusButton}\n                    alt=\"down-button\"\n                    width=\"20\"\n                    height=\"20\"\n                  ></img>\n                </div>\n              )}\n              {this.state.openStrategy1 && (\n                <div className=\"ButtonHolder\">\n                  <img\n                    onClick={() => this.openStrategyTile(1)}\n                    src={MinusButton}\n                    alt=\"up-button\"\n                    width=\"20\"\n                    height=\"20\"\n                  ></img>\n                </div>\n              )}\n            </div>\n\n            {this.state.openStrategy1 && (\n              <div className=\"StrategyContainer\">\n                <p>\n                  {\" \"}\n                  <i>Tick the box once you have tried the suggestion</i>\n                </p>\n                <div\n                  className=\"StrategyTile\"\n                  onClick={() => this.openCodeExample(11)}\n                >\n                  <div className=\"StrategyInstruction\">\n                    <div className=\"StrategyMessage\">\n                      <BlueCheckbox\n                        value=\"box1\"\n                        checked={this.state.checked11}\n                        onChange={() => this.changeChecked(11)}\n                      />\n                      <div className=\"Suggestion\">\n                        Suggestion 1: Add a return statement of type{\" \"}\n                        <p className=\"InputValue\">{this.props.returnType}</p> at\n                        the end of the method{\" \"}\n                        <p className=\"InputValue\">{this.props.className}</p>\n                      </div>\n                    </div>\n                    {!this.state.openCode11 && (\n                      <div className=\"ButtonHolder\">\n                        <img\n                          onClick={() => this.openCodeExample(11)}\n                          src={PlusButton}\n                          alt=\"down-button\"\n                          width=\"20\"\n                          height=\"20\"\n                        ></img>\n                      </div>\n                    )}\n                    {this.state.openCode11 && (\n                      <div className=\"ButtonHolder\">\n                        <img\n                          onClick={() => this.openCodeExample(11)}\n                          src={MinusButton}\n                          alt=\"up-button\"\n                          width=\"20\"\n                          height=\"20\"\n                        ></img>\n                      </div>\n                    )}\n                  </div>\n                  {this.state.openCode11 && (\n                    <div className=\"CodeExample\">\n                      <div className=\"CodeContainer\">\n                        <div className=\"RedCode\">\n                          <div className=\"Indent-0\">\n                            public int{\" \"}\n                            <p className=\"InputValue\">{this.props.className}</p>\n                            () {LEFT_CURLY}\n                          </div>\n                          <div className=\"Indent-1\"> int zero = 0;</div>\n                          <div className=\"Indent-0\"> {RIGHT_CURLY}</div>\n                        </div>\n                      </div>\n                      <div className=\"CodeContainer\">\n                        <div className=\"GreenCode\">\n                          <div className=\"Indent-0\">\n                            public int{\" \"}\n                            <p className=\"InputValue\">{this.props.className}</p>\n                            () {LEFT_CURLY}\n                          </div>\n                          <div className=\"Indent-1\"> int zero = 0;</div>\n                          <div className=\"Indent-1\"> return x;</div>\n                          <div className=\"Indent-0\"> {RIGHT_CURLY}</div>\n                        </div>\n                      </div>\n                    </div>\n                  )}\n                </div>\n              </div>\n            )}\n          </div>\n\n          <div className=\"Tile\">\n            <div className=\"ErrorTile\" onClick={() => this.openStrategyTile(2)}>\n              <div className=\"ErrorMessage\">\n                <h4>\n                  2: You may have missed the return statement in some branches\n                  of the method{\" \"}\n                  <p className=\"InputValue\">{this.props.className}</p>\n                </h4>\n                <div>\n                  Hint: Does your method{\" \"}\n                  <p className=\"InputValue\">{this.props.className}</p> return a\n                  value of type{\" \"}\n                  <p className=\"InputValue\">{this.props.returnType}</p> in all\n                  cases?\n                </div>\n              </div>\n              {!this.state.openStrategy2 && (\n                <div className=\"ButtonHolder\">\n                  <img\n                    onClick={() => this.openStrategyTile(2)}\n                    src={PlusButton}\n                    alt=\"down-button\"\n                    width=\"20\"\n                    height=\"20\"\n                  ></img>\n                </div>\n              )}\n              {this.state.openStrategy2 && (\n                <div className=\"ButtonHolder\">\n                  <img\n                    onClick={() => this.openStrategyTile(2)}\n                    src={MinusButton}\n                    alt=\"up-button\"\n                    width=\"20\"\n                    height=\"20\"\n                  ></img>\n                </div>\n              )}\n            </div>\n            {this.state.openStrategy2 && (\n              <div className=\"StrategyContainer\">\n                <p>\n                  <i>Tick the box once you have tried the suggestion</i>\n                </p>\n                <div\n                  className=\"StrategyTile\"\n                  onClick={() => this.openCodeExample(21)}\n                >\n                  <div className=\"StrategyInstruction\">\n                    <div className=\"StrategyMessage\">\n                      <BlueCheckbox\n                        value=\"box1\"\n                        checked={this.state.checked21}\n                        onChange={() => this.changeChecked(21)}\n                      />\n                      <div className=\"Suggestion\">\n                        Suggestion 1: Make sure all branches of conditionals in\n                        method{\" \"}\n                        <p className=\"InputValue\">{this.props.className}</p>{\" \"}\n                        return value of type{\" \"}\n                        <p className=\"InputValue\">{this.props.returnType}</p>\n                      </div>\n                    </div>\n                    {!this.state.openCode21 && (\n                      <div className=\"ButtonHolder\">\n                        <img\n                          onClick={() => this.openCodeExample(21)}\n                          src={PlusButton}\n                          alt=\"down-button\"\n                          width=\"20\"\n                          height=\"20\"\n                        ></img>\n                      </div>\n                    )}\n                    {this.state.openCode21 && (\n                      <div className=\"ButtonHolder\">\n                        <img\n                          onClick={() => this.openCodeExample(21)}\n                          src={MinusButton}\n                          alt=\"up-button\"\n                          width=\"20\"\n                          height=\"20\"\n                        ></img>\n                      </div>\n                    )}\n                  </div>\n                  {this.state.openCode21 && (\n                    <div className=\"CodeExample\">\n                      <div className=\"CodeContainer\">\n                        <div className=\"RedCode\">\n                          <div className=\"Indent-0\">\n                           int{\" \"}\n                            <p className=\"InputValue\">{this.props.className}</p>\n                            () {LEFT_CURLY}\n                          </div>\n                          <div className=\"Indent-1\"> int a = 0;</div>\n                          <div className=\"Indent-1\"> if (a > 1) return a;</div>\n                          <div className=\"Indent-0\"> {RIGHT_CURLY}</div>\n                        </div>\n                      </div>\n                      <div className=\"CodeContainer\">\n                        <div className=\"GreenCode\">\n                          <div className=\"Indent-0\">\n                            int{\" \"}\n                            <p className=\"InputValue\">{this.props.className}</p>\n                            () {LEFT_CURLY}\n                          </div>\n                          <div className=\"Indent-1\"> int a = 0;</div>\n                          <div className=\"Indent-1\"> if (a > 1) return a;</div>\n                          <div className=\"Indent-1\"> return a;</div>\n                          <div className=\"Indent-0\"> {RIGHT_CURLY}</div>\n                        </div>\n\n                        <div className=\"GreenCode\">\n                          <div className=\"Indent-0\">\n                           int{\" \"}\n                            <p className=\"InputValue\">{this.props.className}</p>\n                            () {LEFT_CURLY}\n                          </div>\n                          <div className=\"Indent-1\"> int a = 0;</div>\n                          <div className=\"Indent-1\">\n                            {\" \"}\n                            if (a > 1) {LEFT_CURLY}\n                          </div>\n                          <div className=\"Indent-2\"> return a;</div>\n                          <div className=\"Indent-1\">\n                            {\" \"}\n                            {RIGHT_CURLY} else {LEFT_CURLY}\n                          </div>\n                          <div className=\"Indent-2\"> return b;</div>\n                          <div className=\"Indent-1\"> {RIGHT_CURLY}</div>\n                          <div className=\"Indent-0\"> {RIGHT_CURLY}</div>\n                        </div>\n                      </div>\n                    </div>\n                  )}\n                </div>\n              </div>\n            )}\n          </div>\n\n          <ResourceFooter />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ReturnMissing;\n","import React from \"react\";\nimport MinusButton from \"./assets/minus.svg\";\nimport PlusButton from \"./assets/plus.svg\";\nimport \"./App.css\";\nimport ResourceFooter from \"./ResourceFooter.jsx\";\n\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { blue } from \"@material-ui/core/colors\";\n\nconst BlueCheckbox = withStyles({\n  root: {\n    color: blue[400],\n    \"&$checked\": {\n      color: blue[600],\n    },\n  },\n  checked: {},\n})((props) => <Checkbox color=\"default\" {...props} />);\n\nconst LEFT_CURLY = \"{\";\nconst RIGHT_CURLY = \"}\";\n\nclass TypeNotFound extends React.Component {\n  constructor(props) {\n    super(props);\n    this.openStrategyTile = this.openStrategyTile.bind(this);\n    this.openCodeExample = this.openCodeExample.bind(this);\n    this.changeChecked = this.changeChecked.bind(this);\n    this.state = {\n      openStrategy1: false,\n      openStrategy2: false,\n      openStrategy3: false,\n      openCode11: false,\n      openCode21: false,\n      openCode22: false,\n      openCode31: false,\n      checked11: false,\n      checked21: false,\n      checked22: false,\n      checked31: false,\n    };\n  }\n\n  openStrategyTile(i) {\n    switch (i) {\n      case 1:\n        this.setState({ openStrategy1: !this.state.openStrategy1 });\n        this.setState({ openCode11: false });\n        break;\n      case 2:\n        this.setState({ openStrategy2: !this.state.openStrategy2 });\n        this.setState({ openCode21: false });\n        this.setState({ openCode22: false });\n        break;\n      case 3:\n        this.setState({ openStrategy3: !this.state.openStrategy3 });\n        this.setState({ openCode31: false });\n        break;\n      default:\n        break;\n    }\n  }\n\n  openCodeExample(i) {\n    switch (i) {\n      case 11:\n        this.setState({ openCode11: !this.state.openCode11 });\n        break;\n      case 21:\n        this.setState({ openCode21: !this.state.openCode21 });\n        break;\n      case 22:\n        this.setState({ openCode22: !this.state.openCode22 });\n        break;\n      case 31:\n        this.setState({ openCode31: !this.state.openCode31 });\n        break;\n      default:\n        break;\n    }\n  }\n\n  changeChecked(i) {\n    switch (i) {\n      case 11:\n        this.setState({ checked11: !this.state.checked11 });\n        break;\n      case 21:\n        this.setState({ checked21: !this.state.checked21 });\n        break;\n      case 22:\n        this.setState({ checked22: !this.state.checked22 });\n        break;\n      case 31:\n        this.setState({ checked31: !this.state.checked31 });\n        break;\n      default:\n        break;\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"AppContent\">\n          <div className=\"Title\">\n            <h2>\n              Cannot find a class or type name{\" \"}\n              <div className=\"InputValue\">{this.props.className}</div>\n            </h2>\n          </div>\n\n          <h4>\n            <i>\n              Translation: You are trying to declare a variable of type{\" \"}\n              <div className=\"InputValue\">{this.props.className}</div> but I\n              don’t know what a{\" \"}\n              <div className=\"InputValue\">{this.props.className}</div> is.\n            </i>\n          </h4>\n\n          <div className=\"Tile\">\n            <div className=\"ErrorTile\" onClick={() => this.openStrategyTile(1)}>\n              <div className=\"ErrorMessage\">\n                <h4>\n                  1: You may have mistyped class name{\" \"}\n                  <div className=\"InputValue\">{this.props.className}</div>{\" \"}\n                </h4>\n                <div>\n                  Hint: Is <p className=\"InputValue\">{this.props.className}</p>{\" \"}\n                  the exact class name that you have defined?\n                </div>\n              </div>\n              {!this.state.openStrategy1 && (\n                <div className=\"ButtonHolder\">\n                  <img\n                    onClick={() => this.openStrategyTile(1)}\n                    src={PlusButton}\n                    alt=\"down-button\"\n                    width=\"20\"\n                    height=\"20\"\n                  ></img>\n                </div>\n              )}\n              {this.state.openStrategy1 && (\n                <div className=\"ButtonHolder\">\n                  <img\n                    onClick={() => this.openStrategyTile(1)}\n                    src={MinusButton}\n                    alt=\"up-button\"\n                    width=\"20\"\n                    height=\"20\"\n                  ></img>\n                </div>\n              )}\n            </div>\n\n            {this.state.openStrategy1 && (\n              <div className=\"StrategyContainer\">\n                <p>\n                  {\" \"}\n                  <i>Tick the box once you have tried the suggestion</i>\n                </p>\n                <div\n                  className=\"StrategyTile\"\n                  onClick={() => this.openCodeExample(11)}\n                >\n                  <div className=\"StrategyInstruction\">\n                    <div className=\"StrategyMessage\">\n                      <BlueCheckbox\n                        value=\"box1\"\n                        checked={this.state.checked11}\n                        onChange={() => this.changeChecked(11)}\n                      />\n                      <div className=\"Suggestion\">\n                        Suggestion 1: Change{\" \"}\n                        <p className=\"InputValue\">{this.props.className}</p> to\n                        the class name that you have defined\n                      </div>\n                    </div>\n                    {!this.state.openCode11 && (\n                      <div className=\"ButtonHolder\">\n                        <img\n                          onClick={() => this.openCodeExample(11)}\n                          src={PlusButton}\n                          alt=\"down-button\"\n                          width=\"20\"\n                          height=\"20\"\n                        ></img>\n                      </div>\n                    )}\n                    {this.state.openCode11 && (\n                      <div className=\"ButtonHolder\">\n                        <img\n                          onClick={() => this.openCodeExample(11)}\n                          src={MinusButton}\n                          alt=\"up-button\"\n                          width=\"20\"\n                          height=\"20\"\n                        ></img>\n                      </div>\n                    )}\n                  </div>\n                  {this.state.openCode11 && (\n                    <div className=\"CodeExample\">\n                      <div className=\"CodeContainer\">\n                        <div className=\"RedCode\">\n                          <div className=\"Indent-0\">\n                            {this.props.className} {this.props.varName} = new{\" \"}\n                            {this.props.className}();\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"CodeContainer\">\n                        <div className=\"GreenCode\">\n                          <div className=\"Indent-0\">\n                            void setup() {LEFT_CURLY}{\" \"}\n                          </div>\n                          <div className=\"Indent-1\">\n                            {this.props.correctName} {this.props.varName} = new{\" \"}\n                            {this.props.correctName}();{\" \"}\n                          </div>\n                          <div className=\"Indent-0\">{RIGHT_CURLY}</div>\n                          <div className=\"Indent-0\">\n                            class {this.props.correctName} {LEFT_CURLY}\n                          </div>\n                          <div className=\"Indent-1\">\n                            {this.props.correctName}() {LEFT_CURLY}\n                          </div>\n                          <div className=\"Indent-1\">{RIGHT_CURLY}</div>\n                          <div className=\"Indent-0\">{RIGHT_CURLY}</div>\n                        </div>\n                      </div>\n                    </div>\n                  )}\n                </div>\n              </div>\n            )}\n          </div>\n\n          <div className=\"Tile\">\n            <div className=\"ErrorTile\" onClick={() => this.openStrategyTile(2)}>\n              <div className=\"ErrorMessage\">\n                <h4>\n                  2: You may have forgotten to create class{\" \"}\n                  <div className=\"InputValue\">{this.props.className}</div>{\" \"}\n                </h4>\n                <div>\n                  Hint: Is <p className=\"InputValue\">{this.props.className}</p>{\" \"}\n                  the name of the non-builtin class that you forgot to create?\n                </div>\n              </div>\n              {!this.state.openStrategy2 && (\n                <div className=\"ButtonHolder\">\n                  <img\n                    onClick={() => this.openStrategyTile(2)}\n                    src={PlusButton}\n                    alt=\"down-button\"\n                    width=\"20\"\n                    height=\"20\"\n                  ></img>\n                </div>\n              )}\n              {this.state.openStrategy2 && (\n                <div className=\"ButtonHolder\">\n                  <img\n                    onClick={() => this.openStrategyTile(2)}\n                    src={MinusButton}\n                    alt=\"up-button\"\n                    width=\"20\"\n                    height=\"20\"\n                  ></img>\n                </div>\n              )}\n            </div>\n            {this.state.openStrategy2 && (\n              <div className=\"StrategyContainer\">\n                <p>\n                  <i>Tick the box once you have tried the suggestion</i>\n                </p>\n                <div\n                  className=\"StrategyTile\"\n                  onClick={() => this.openCodeExample(21)}\n                >\n                  <div className=\"StrategyInstruction\">\n                    <div className=\"StrategyMessage\">\n                      <BlueCheckbox\n                        value=\"box1\"\n                        checked={this.state.checked21}\n                        onChange={() => this.changeChecked(21)}\n                      />\n                      <div className=\"Suggestion\">\n                        Suggestion 1: Add class{\" \"}\n                        <p className=\"InputValue\">{this.props.className}</p> to\n                        your current file\n                      </div>\n                    </div>\n                    {!this.state.openCode21 && (\n                      <div className=\"ButtonHolder\">\n                        <img\n                          onClick={() => this.openCodeExample(21)}\n                          src={PlusButton}\n                          alt=\"down-button\"\n                          width=\"20\"\n                          height=\"20\"\n                        ></img>\n                      </div>\n                    )}\n                    {this.state.openCode21 && (\n                      <div className=\"ButtonHolder\">\n                        <img\n                          onClick={() => this.openCodeExample(21)}\n                          src={MinusButton}\n                          alt=\"up-button\"\n                          width=\"20\"\n                          height=\"20\"\n                        ></img>\n                      </div>\n                    )}\n                  </div>\n                  {this.state.openCode21 && (\n                    <div className=\"CodeExample\">\n                      <div className=\"CodeContainer\">\n                        <div className=\"RedCode\">\n                          <div className=\"Indent-0\">\n                            {this.props.className} {this.props.varName} = new{\" \"}\n                            {this.props.className}();\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"CodeContainer\">\n                        <div className=\"GreenCode\">\n                          <div className=\"Indent-0\">\n                            void setup() {LEFT_CURLY}{\" \"}\n                          </div>\n                          <div className=\"Indent-1\">\n                            {this.props.className} {this.props.varName} = new{\" \"}\n                            {this.props.className}();{\" \"}\n                          </div>\n                          <div className=\"Indent-0\">{RIGHT_CURLY}</div>\n                          <div className=\"Indent-0\">\n                            class {this.props.className} {LEFT_CURLY}\n                          </div>\n                          <div className=\"Indent-1\">\n                            {this.props.className}() {LEFT_CURLY}\n                          </div>\n                          <div className=\"Indent-1\">{RIGHT_CURLY}</div>\n                          <div className=\"Indent-0\">{RIGHT_CURLY}</div>\n                        </div>\n                      </div>\n                    </div>\n                  )}\n                </div>\n\n                <div\n                  className=\"StrategyTile\"\n                  onClick={() => this.openCodeExample(22)}\n                >\n                  <div className=\"StrategyInstruction\">\n                    <div className=\"StrategyMessage\">\n                      <BlueCheckbox\n                        value=\"box1\"\n                        checked={this.state.checked22}\n                        onChange={() => this.changeChecked(22)}\n                      />\n                      <div className=\"Suggestion\">\n                        Suggestion 2: Add class{\" \"}\n                        <p className=\"InputValue\">{this.props.className}</p> to\n                        another file in the same project and import it to the\n                        current file\n                      </div>\n                    </div>\n                    {!this.state.openCode22 && (\n                      <div className=\"ButtonHolder\">\n                        <img\n                          onClick={() => this.openCodeExample(22)}\n                          src={PlusButton}\n                          alt=\"down-button\"\n                          width=\"20\"\n                          height=\"20\"\n                        ></img>\n                      </div>\n                    )}\n                    {this.state.openCode22 && (\n                      <div className=\"ButtonHolder\">\n                        <img\n                          onClick={() => this.openCodeExample(22)}\n                          src={MinusButton}\n                          alt=\"up-button\"\n                          width=\"20\"\n                          height=\"20\"\n                        ></img>\n                      </div>\n                    )}\n                  </div>\n                  {this.state.openCode22 && (\n                    <div className=\"CodeExample\">\n                      <div className=\"CodeContainer\">\n                        <p>FileA.java</p>\n                        <div className=\"RedCode\">\n                          <div className=\"Indent-0\">\n                            {this.props.className} {this.props.varName} = new{\" \"}\n                            {this.props.className}();\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"CodeContainer\">\n                        <p>FileA.java</p>\n                        <div className=\"GreenCode\">\n                          <div className=\"Indent-0\">\n                            import FileB.\n                            {this.props.className};{\" \"}\n                          </div>\n                          <div className=\"Indent-0\">\n                            void setup() {LEFT_CURLY}{\" \"}\n                          </div>\n                          <div className=\"Indent-1\">\n                            {this.props.className} {this.props.varName} = new{\" \"}\n                            {this.props.className}();{\" \"}\n                          </div>\n                          <div className=\"Indent-0\">{RIGHT_CURLY}</div>\n                        </div>\n                        <p>FileB.java</p>\n                        <div className=\"GreenCode\">\n                          <div className=\"Indent-0\">\n                            class {this.props.className} {LEFT_CURLY}\n                          </div>\n                          <div className=\"Indent-1\">\n                            {this.props.className}() {LEFT_CURLY}\n                          </div>\n                          <div className=\"Indent-1\">{RIGHT_CURLY}</div>\n                          <div className=\"Indent-0\">{RIGHT_CURLY}</div>\n                        </div>\n                      </div>\n                    </div>\n                  )}\n                </div>\n              </div>\n            )}\n          </div>\n\n          <div className=\"Tile\">\n            <div className=\"ErrorTile\" onClick={() => this.openStrategyTile(3)}>\n              <div className=\"ErrorMessage\">\n                <h4>\n                  3: You may have forgotten to import class{\" \"}\n                  <div className=\"InputValue\">{this.props.className}</div> from\n                  a built-in library\n                </h4>\n                <div>\n                  Hint: Is <p className=\"InputValue\">{this.props.className}</p>{\" \"}\n                  a built-in class?\n                </div>\n              </div>\n              {!this.state.openStrategy3 && (\n                <div className=\"ButtonHolder\">\n                  <img\n                    onClick={() => this.openStrategyTile(3)}\n                    src={PlusButton}\n                    alt=\"down-button\"\n                    width=\"20\"\n                    height=\"20\"\n                  ></img>\n                </div>\n              )}\n              {this.state.openStrategy3 && (\n                <div className=\"ButtonHolder\">\n                  <img\n                    onClick={() => this.openStrategyTile(3)}\n                    src={MinusButton}\n                    alt=\"up-button\"\n                    width=\"20\"\n                    height=\"20\"\n                  ></img>\n                </div>\n              )}\n            </div>\n            {this.state.openStrategy3 && (\n              <div className=\"StrategyContainer\">\n                <p>\n                  <i>Tick the box once you have tried the suggestion</i>\n                </p>\n                <div\n                  className=\"StrategyTile\"\n                  onClick={() => this.openCodeExample(31)}\n                >\n                  <div className=\"StrategyInstruction\">\n                    <div className=\"StrategyMessage\">\n                      <BlueCheckbox\n                        value=\"box1\"\n                        checked={this.state.checked31}\n                        onChange={() => this.changeChecked(31)}\n                      />\n                      <div className=\"Suggestion\">\n                        Suggestion 1: Import{\" \"}\n                        <p className=\"InputValue\">{this.props.className}</p> to\n                        your file\n                      </div>\n                    </div>\n                    {!this.state.openCode31 && (\n                      <div className=\"ButtonHolder\">\n                        <img\n                          onClick={() => this.openCodeExample(31)}\n                          src={PlusButton}\n                          alt=\"down-button\"\n                          width=\"20\"\n                          height=\"20\"\n                        ></img>\n                      </div>\n                    )}\n                    {this.state.openCode31 && (\n                      <div className=\"ButtonHolder\">\n                        <img\n                          onClick={() => this.openCodeExample(31)}\n                          src={MinusButton}\n                          alt=\"up-button\"\n                          width=\"20\"\n                          height=\"20\"\n                        ></img>\n                      </div>\n                    )}\n                  </div>\n                  {this.state.openCode31 && (\n                    <div className=\"CodeExample\">\n                      <div className=\"CodeContainer\">\n                        <div className=\"RedCode\">\n                          <div className=\"Indent-0\">\n                            {this.props.className} {this.props.varName} = new{\" \"}\n                            {this.props.className}\n                            ();\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"CodeContainer\">\n                        <div className=\"GreenCode\">\n                          <div className=\"Indent-0\">\n                            import path.to.library.\n                            {this.props.className};{\" \"}\n                          </div>\n                          <div className=\"Indent-0\">\n                            void setup() {LEFT_CURLY}{\" \"}\n                          </div>\n                          <div className=\"Indent-1\">\n                            {this.props.className} {this.props.varName} = new{\" \"}\n                            {this.props.className}\n                            ();{\" \"}\n                          </div>\n                          <div className=\"Indent-0\">{RIGHT_CURLY}</div>\n                        </div>\n                      </div>\n                    </div>\n                  )}\n                </div>\n              </div>\n            )}\n          </div>\n          <ResourceFooter />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TypeNotFound;\n","import React from \"react\";\nimport MinusButton from \"./assets/minus.svg\";\nimport PlusButton from \"./assets/plus.svg\";\nimport \"./App.css\";\nimport ResourceFooter from \"./ResourceFooter.jsx\";\n\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { blue } from \"@material-ui/core/colors\";\n\nconst BlueCheckbox = withStyles({\n  root: {\n    color: blue[400],\n    \"&$checked\": {\n      color: blue[600],\n    },\n  },\n  checked: {},\n})((props) => <Checkbox color=\"default\" {...props} />);\n\nconst LEFT_CURLY = \"{\";\nconst RIGHT_CURLY = \"}\";\n\nclass VariableNotFound extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      openStrategy1: false,\n      openStrategy2: false,\n      openStrategy3: false,\n      openCode11: false,\n      openCode21: false,\n      openCode22: false,\n      openCode31: false,\n      checked11: false,\n      checked21: false,\n      checked22: false,\n      checked31: false,\n    };\n  }\n\n  openStrategyTile(i) {\n    switch (i) {\n      case 1:\n        this.setState({ openStrategy1: !this.state.openStrategy1 });\n        this.setState({ openCode11: false });\n        break;\n      case 2:\n        this.setState({ openStrategy2: !this.state.openStrategy2 });\n        this.setState({ openCode21: false });\n        this.setState({ openCode22: false });\n        break;\n      case 3:\n        this.setState({ openStrategy3: !this.state.openStrategy3 });\n        this.setState({ openCode31: false });\n        break;\n      case 4:\n        this.setState({ openStrategy4: !this.state.openStrategy4 });\n        this.setState({ openCode41: false });\n        this.setState({ openCode42: false });\n        break;\n      default:\n        break;\n    }\n  }\n\n  openCodeExample(i) {\n    switch (i) {\n      case 11:\n        this.setState({ openCode11: !this.state.openCode11 });\n        break;\n      case 21:\n        this.setState({ openCode21: !this.state.openCode21 });\n        break;\n      case 22:\n        this.setState({ openCode22: !this.state.openCode22 });\n        break;\n      case 31:\n        this.setState({ openCode31: !this.state.openCode31 });\n        break;\n      case 41:\n        this.setState({ openCode41: !this.state.openCode41 });\n        break;\n      case 42:\n        this.setState({ openCode42: !this.state.openCode42 });\n        break;\n      default:\n        break;\n    }\n  }\n\n  changeChecked(i) {\n    switch (i) {\n      case 11:\n        this.setState({ checked11: !this.state.checked11 });\n        break;\n      case 21:\n        this.setState({ checked21: !this.state.checked21 });\n        break;\n      case 22:\n        this.setState({ checked22: !this.state.checked22 });\n        break;\n      case 31:\n        this.setState({ checked31: !this.state.checked31 });\n        break;\n      case 41:\n        this.setState({ checked41: !this.state.checked41 });\n        break;\n      case 42:\n        this.setState({ checked42: !this.state.checked42 });\n        break;\n      default:\n        break;\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"AppContent\">\n          <div className=\"Title\">\n            <h2>\n              <div className=\"InputValue\">{this.props.varName}</div> cannot be\n              resolved to a variable\n            </h2>\n          </div>\n          <h4>\n            <i>\n              Translation: You are trying to use a variable named{\" \"}\n              <div className=\"InputValue\">{this.props.varName}</div> but I don’t\n              know what that variable named{\" \"}\n              <div className=\"InputValue\">{this.props.varName}</div> is.\n            </i>\n          </h4>\n\n          <div className=\"Tile\">\n            <div className=\"ErrorTile\" onClick={() => this.openStrategyTile(1)}>\n              <div className=\"ErrorMessage\">\n                <h4>\n                  1: You may have forgotten to declare variable{\" \"}\n                  <div className=\"InputValue\">{this.props.varName}</div>{\" \"}\n                </h4>\n                <div>\n                  Hint: Did you forget to declare what{\" \"}\n                  <p className=\"InputValue\">{this.props.varName}</p> is before\n                  using it?\n                </div>\n              </div>\n              {!this.state.openStrategy1 && (\n                <div className=\"ButtonHolder\">\n                  <img\n                    onClick={() => this.openStrategyTile(1)}\n                    src={PlusButton}\n                    alt=\"down-button\"\n                    width=\"20\"\n                    height=\"20\"\n                  ></img>\n                </div>\n              )}\n              {this.state.openStrategy1 && (\n                <div className=\"ButtonHolder\">\n                  <img\n                    onClick={() => this.openStrategyTile(1)}\n                    src={MinusButton}\n                    alt=\"up-button\"\n                    width=\"20\"\n                    height=\"20\"\n                  ></img>\n                </div>\n              )}\n            </div>\n\n            {this.state.openStrategy1 && (\n              <div className=\"StrategyContainer\">\n                <p>\n                  {\" \"}\n                  <i>Tick the box once you have tried the suggestion</i>\n                </p>\n                <div\n                  className=\"StrategyTile\"\n                  onClick={() => this.openCodeExample(11)}\n                >\n                  <div className=\"StrategyInstruction\">\n                    <div className=\"StrategyMessage\">\n                      <BlueCheckbox\n                        value=\"box1\"\n                        checked={this.state.checked11}\n                        onChange={() => this.changeChecked(11)}\n                      />\n                      <div className=\"Suggestion\">\n                        Suggestion 1: Add variable declaration for{\" \"}\n                        <p className=\"InputValue\">{this.props.varName}</p>{\" \"}\n                        before the first occurence of{\" \"}\n                        <p className=\"InputValue\">{this.props.varName}</p> in\n                        the code\n                      </div>\n                    </div>\n                    {!this.state.openCode11 && (\n                      <div className=\"ButtonHolder\">\n                        <img\n                          onClick={() => this.openCodeExample(11)}\n                          src={PlusButton}\n                          alt=\"down-button\"\n                          width=\"20\"\n                          height=\"20\"\n                        ></img>\n                      </div>\n                    )}\n                    {this.state.openCode11 && (\n                      <div className=\"ButtonHolder\">\n                        <img\n                          onClick={() => this.openCodeExample(11)}\n                          src={MinusButton}\n                          alt=\"up-button\"\n                          width=\"20\"\n                          height=\"20\"\n                        ></img>\n                      </div>\n                    )}\n                  </div>\n                  {this.state.openCode11 && (\n                    <div className=\"CodeExample\">\n                      <div className=\"CodeContainer\">\n                        <div className=\"RedCode\">\n                          <div className=\"Indent-0\">\n                            print(\n                            <p className=\"InputValue\">{this.props.varName}</p>);\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"CodeContainer\">\n                        <div className=\"GreenCode\">\n                          <div className=\"Indent-0\">\n                            {this.props.className}{\" \"}\n                            <p className=\"InputValue\">{this.props.varName}</p> =\n                            new {this.props.className}\n                            {this.props.classparam};\n                          </div>\n                          <div className=\"Indent-0\">\n                            print(\n                            <p className=\"InputValue\">{this.props.varName}</p>);\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  )}\n                </div>\n              </div>\n            )}\n          </div>\n\n          <div className=\"Tile\">\n            <div className=\"ErrorTile\" onClick={() => this.openStrategyTile(2)}>\n              <div className=\"ErrorMessage\">\n                <h4>\n                  2: You may have declared variable{\" \"}\n                  <div className=\"InputValue\">{this.props.varName}</div>{\" \"}\n                  incorrectly\n                </h4>\n                <div>\n                  Hint: Have you already declared{\" \"}\n                  <p className=\"InputValue\">{this.props.varName}</p> but made\n                  some mistakes when declaring it?\n                </div>\n              </div>\n              {!this.state.openStrategy2 && (\n                <div className=\"ButtonHolder\">\n                  <img\n                    onClick={() => this.openStrategyTile(2)}\n                    src={PlusButton}\n                    alt=\"down-button\"\n                    width=\"20\"\n                    height=\"20\"\n                  ></img>\n                </div>\n              )}\n              {this.state.openStrategy2 && (\n                <div className=\"ButtonHolder\">\n                  <img\n                    onClick={() => this.openStrategyTile(2)}\n                    src={MinusButton}\n                    alt=\"up-button\"\n                    width=\"20\"\n                    height=\"20\"\n                  ></img>\n                </div>\n              )}\n            </div>\n\n            {this.state.openStrategy2 && (\n              <div className=\"StrategyContainer\">\n                <p>\n                  {\" \"}\n                  <i>Tick the box once you have tried the suggestion</i>\n                </p>\n                <div\n                  className=\"StrategyTile\"\n                  onClick={() => this.openCodeExample(21)}\n                >\n                  <div className=\"StrategyInstruction\">\n                    <div className=\"StrategyMessage\">\n                      <BlueCheckbox\n                        value=\"box1\"\n                        checked={this.state.checked21}\n                        onChange={() => this.changeChecked(21)}\n                      />\n                      <div className=\"Suggestion\">\n                        Suggestion 1: Change the class name if the class name in\n                        the variable declaration is not what you wanted\n                      </div>\n                    </div>\n                    {!this.state.openCode21 && (\n                      <div className=\"ButtonHolder\">\n                        <img\n                          onClick={() => this.openCodeExample(21)}\n                          src={PlusButton}\n                          alt=\"down-button\"\n                          width=\"20\"\n                          height=\"20\"\n                        ></img>\n                      </div>\n                    )}\n                    {this.state.openCode21 && (\n                      <div className=\"ButtonHolder\">\n                        <img\n                          onClick={() => this.openCodeExample(21)}\n                          src={MinusButton}\n                          alt=\"up-button\"\n                          width=\"20\"\n                          height=\"20\"\n                        ></img>\n                      </div>\n                    )}\n                  </div>\n                  {this.state.openCode21 && (\n                    <div className=\"CodeExample\">\n                      <div className=\"CodeContainer\">\n                        <div className=\"RedCode\">\n                          <div className=\"Indent-0\">\n                            {this.props.className}{\" \"}\n                            <p className=\"InputValue\">{this.props.varName}</p> =\n                            new {this.props.className}\n                            {this.props.classparam};\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"CodeContainer\">\n                        <div className=\"GreenCode\">\n                          <div className=\"Indent-0\">\n                            CorrectName{\" \"}\n                            <p className=\"InputValue\">{this.props.varName}</p> =\n                            new CorrectName\n                            {this.props.classparam};\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  )}\n                </div>\n\n                <div\n                  className=\"StrategyTile\"\n                  onClick={() => this.openCodeExample(22)}\n                >\n                  <div className=\"StrategyInstruction\">\n                    <div className=\"StrategyMessage\">\n                      <BlueCheckbox\n                        value=\"box1\"\n                        checked={this.state.checked22}\n                        onChange={() => this.changeChecked(22)}\n                      />\n                      <div className=\"Suggestion\">\n                        Suggestion 2: Correct the variable declaration if the\n                        variable declaration is syntactially incorrect\n                      </div>\n                    </div>\n                    {!this.state.openCode22 && (\n                      <div className=\"ButtonHolder\">\n                        <img\n                          onClick={() => this.openCodeExample(22)}\n                          src={PlusButton}\n                          alt=\"down-button\"\n                          width=\"20\"\n                          height=\"20\"\n                        ></img>\n                      </div>\n                    )}\n                    {this.state.openCode22 && (\n                      <div className=\"ButtonHolder\">\n                        <img\n                          onClick={() => this.openCodeExample(22)}\n                          src={MinusButton}\n                          alt=\"up-button\"\n                          width=\"20\"\n                          height=\"20\"\n                        ></img>\n                      </div>\n                    )}\n                  </div>\n                  {this.state.openCode22 && (\n                    <div className=\"CodeExample\">\n                      <div className=\"CodeContainer\">\n                        <div className=\"RedCode\">\n                          <div className=\"Indent-0\">\n                            {this.props.className}{\" \"}\n                            <p className=\"InputValue\">{this.props.varName}</p> ={\" \"}\n                            {this.props.className}\n                            {this.props.classparam};\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"CodeContainer\">\n                        <div className=\"GreenCode\">\n                          <div className=\"Indent-0\">\n                            {this.props.className}{\" \"}\n                            <p className=\"InputValue\">{this.props.varName}</p> =\n                            new {this.props.className}\n                            {this.props.classparam};\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  )}\n                </div>\n              </div>\n            )}\n          </div>\n\n          <div className=\"Tile\">\n            <div className=\"ErrorTile\" onClick={() => this.openStrategyTile(3)}>\n              <div className=\"ErrorMessage\">\n                <h4>\n                  3: You may have mistyped variable name{\" \"}\n                  <div className=\"InputValue\">{this.props.varName}</div>{\" \"}\n                </h4>\n                <div>\n                  Hint: Is <p className=\"InputValue\">{this.props.varName}</p>{\" \"}\n                  the exact variable name that you have defined?\n                </div>\n              </div>\n              {!this.state.openStrategy3 && (\n                <div className=\"ButtonHolder\">\n                  <img\n                    onClick={() => this.openStrategyTile(3)}\n                    src={PlusButton}\n                    alt=\"down-button\"\n                    width=\"20\"\n                    height=\"20\"\n                  ></img>\n                </div>\n              )}\n              {this.state.openStrategy3 && (\n                <div className=\"ButtonHolder\">\n                  <img\n                    onClick={() => this.openStrategyTile(3)}\n                    src={MinusButton}\n                    alt=\"up-button\"\n                    width=\"20\"\n                    height=\"20\"\n                  ></img>\n                </div>\n              )}\n            </div>\n\n            {this.state.openStrategy3 && (\n              <div className=\"StrategyContainer\">\n                <p>\n                  {\" \"}\n                  <i>Tick the box once you have tried the suggestion</i>\n                </p>\n                <div\n                  className=\"StrategyTile\"\n                  onClick={() => this.openCodeExample(31)}\n                >\n                  <div className=\"StrategyInstruction\">\n                    <div className=\"StrategyMessage\">\n                      <BlueCheckbox\n                        value=\"box1\"\n                        checked={this.state.checked31}\n                        onChange={() => this.changeChecked(31)}\n                      />\n                      <div className=\"Suggestion\">\n                        Suggestion 1: Change{\" \"}\n                        <p className=\"InputValue\">{this.props.varName}</p> to\n                        the variable name that you have defined\n                      </div>\n                    </div>\n                    {!this.state.openCode31 && (\n                      <div className=\"ButtonHolder\">\n                        <img\n                          onClick={() => this.openCodeExample(31)}\n                          src={PlusButton}\n                          alt=\"down-button\"\n                          width=\"20\"\n                          height=\"20\"\n                        ></img>\n                      </div>\n                    )}\n                    {this.state.openCode31 && (\n                      <div className=\"ButtonHolder\">\n                        <img\n                          onClick={() => this.openCodeExample(31)}\n                          src={MinusButton}\n                          alt=\"up-button\"\n                          width=\"20\"\n                          height=\"20\"\n                        ></img>\n                      </div>\n                    )}\n                  </div>\n                  {this.state.openCode31 && (\n                    <div>\n                      <div className=\"CodeExample\">\n                        <div className=\"CodeContainer\">\n                          <div className=\"RedCode\">\n                            <div className=\"Indent-0\">\n                              {this.props.className}{\" \"}\n                              <p className=\"InputValue\">correct_name</p> = new{\" \"}\n                              {this.props.className}\n                              {this.props.classparam};\n                            </div>\n                            <div className=\"Indent-0\">...</div>\n                            <div className=\"Indent-0\">\n                              print(\n                              <p className=\"InputValue\">{this.props.varName}</p>\n                              );\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"CodeContainer\">\n                          <div className=\"GreenCode\">\n                            <div className=\"Indent-0\">\n                              {this.props.className}{\" \"}\n                              <p className=\"InputValue\">correct_name</p> = new{\" \"}\n                              {this.props.className}\n                              {this.props.classparam};\n                            </div>\n                            <div className=\"Indent-0\">...</div>\n                            <div className=\"Indent-0\">\n                              print(\n                              <p className=\"InputValue\">correct_name</p>);\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  )}\n                </div>\n              </div>\n            )}\n          </div>\n\n          <div className=\"Tile\">\n            <div className=\"ErrorTile\" onClick={() => this.openStrategyTile(4)}>\n              <div className=\"ErrorMessage\">\n                <h4>\n                  4: You may have used variable{\" \"}\n                  <div className=\"InputValue\">{this.props.varName}</div> in the\n                  incorrect scope\n                </h4>\n                <div>\n                  Hint: Are the use of variable{\" \"}\n                  <p className=\"InputValue\">{this.props.varName}</p> and its\n                  declaration in the different scopes?\n                </div>\n              </div>\n              {!this.state.openStrategy4 && (\n                <div className=\"ButtonHolder\">\n                  <img\n                    onClick={() => this.openStrategyTile(4)}\n                    src={PlusButton}\n                    alt=\"down-button\"\n                    width=\"20\"\n                    height=\"20\"\n                  ></img>\n                </div>\n              )}\n              {this.state.openStrategy4 && (\n                <div className=\"ButtonHolder\">\n                  <img\n                    onClick={() => this.openStrategyTile(4)}\n                    src={MinusButton}\n                    alt=\"up-button\"\n                    width=\"20\"\n                    height=\"20\"\n                  ></img>\n                </div>\n              )}\n            </div>\n\n            {this.state.openStrategy4 && (\n              <div className=\"StrategyContainer\">\n                <p>\n                  {\" \"}\n                  <i>Tick the box once you have tried the suggestion</i>\n                </p>\n\n                <div\n                  className=\"StrategyTile\"\n                  onClick={() => this.openCodeExample(41)}\n                >\n                  <div className=\"StrategyInstruction\">\n                    <div className=\"StrategyMessage\">\n                      <BlueCheckbox\n                        value=\"box1\"\n                        checked={this.state.checked41}\n                        onChange={() => this.changeChecked(41)}\n                      />\n                      <div className=\"Suggestion\">\n                        Suggestion 1: Move{\" \"}\n                        <p className=\"InputValue\">{this.props.varName}</p> to\n                        the same function with its declaration\n                      </div>\n                    </div>\n                    {!this.state.openCode41 && (\n                      <div className=\"ButtonHolder\">\n                        <img\n                          onClick={() => this.openCodeExample(41)}\n                          src={PlusButton}\n                          alt=\"down-button\"\n                          width=\"20\"\n                          height=\"20\"\n                        ></img>\n                      </div>\n                    )}\n                    {this.state.openCode41 && (\n                      <div className=\"ButtonHolder\">\n                        <img\n                          onClick={() => this.openCodeExample(41)}\n                          src={MinusButton}\n                          alt=\"up-button\"\n                          width=\"20\"\n                          height=\"20\"\n                        ></img>\n                      </div>\n                    )}\n                  </div>\n                  {this.state.openCode41 && (\n                    <div className=\"CodeExample\">\n                      <div className=\"CodeContainer\">\n                        <div className=\"RedCode\">\n                          <div className=\"Indent-0\">\n                            void setup(){LEFT_CURLY}\n                          </div>\n                          <div className=\"Indent-1\">\n                            {this.props.className}{\" \"}\n                            <p className=\"InputValue\">{this.props.varName}</p> =\n                            new {this.props.className}\n                            {this.props.classparam};\n                          </div>\n                          <div className=\"Indent-1\">...</div>\n                          <div className=\"Indent-0\">{RIGHT_CURLY}</div>\n                          <div className=\"Indent-0\">\n                            void draw(){LEFT_CURLY}\n                          </div>\n                          <div className=\"Indent-1\">\n                            println(\n                            <p className=\"InputValue\">{this.props.varName}</p>);\n                          </div>\n                          <div className=\"Indent-0\">{RIGHT_CURLY}</div>\n                        </div>\n                      </div>\n                      <div className=\"CodeContainer\">\n                        <div className=\"GreenCode\">\n                          <div className=\"Indent-0\">\n                            void draw(){LEFT_CURLY}\n                          </div>\n                          <div className=\"Indent-1\">\n                            {this.props.className}{\" \"}\n                            <p className=\"InputValue\">{this.props.varName}</p> =\n                            new {this.props.className}\n                            {this.props.classparam};\n                          </div>\n                          <div className=\"Indent-1\">...</div>\n                          <div className=\"Indent-1\">\n                            println(\n                            <p className=\"InputValue\">{this.props.varName}</p>);\n                          </div>\n                          <div className=\"Indent-0\">{RIGHT_CURLY}</div>\n                        </div>\n                      </div>\n                    </div>\n                  )}\n                </div>\n                <div\n                  className=\"StrategyTile\"\n                  onClick={() => this.openCodeExample(42)}\n                >\n                  <div className=\"StrategyInstruction\">\n                    <div className=\"StrategyMessage\">\n                      <BlueCheckbox\n                        value=\"box1\"\n                        checked={this.state.checked42}\n                        onChange={() => this.changeChecked(42)}\n                      />\n                      <div className=\"Suggestion\">\n                        Suggestion 2: Move{\" \"}\n                        <p className=\"InputValue\">{this.props.varName}</p> to\n                        the same or smaller scope than its declaration\n                      </div>\n                    </div>\n                    {!this.state.openCode42 && (\n                      <div className=\"ButtonHolder\">\n                        <img\n                          onClick={() => this.openCodeExample(42)}\n                          src={PlusButton}\n                          alt=\"down-button\"\n                          width=\"20\"\n                          height=\"20\"\n                        ></img>\n                      </div>\n                    )}\n                    {this.state.openCode42 && (\n                      <div className=\"ButtonHolder\">\n                        <img\n                          onClick={() => this.openCodeExample(42)}\n                          src={MinusButton}\n                          alt=\"up-button\"\n                          width=\"20\"\n                          height=\"20\"\n                        ></img>\n                      </div>\n                    )}\n                  </div>\n                  {this.state.openCode42 && (\n                    <div>\n                      <div>\n                        <div className=\"CodeExample\">\n                          <div className=\"CodeContainer\">\n                            <div className=\"RedCode\">\n                              <div className=\"Indent-0\">\n                                (while i != count) {LEFT_CURLY}\n                              </div>\n                              <div className=\"Indent-1\">\n                                {this.props.className}{\" \"}\n                                <p className=\"InputValue\">\n                                  {this.props.varName}\n                                </p>{\" \"}\n                                = new {this.props.className}\n                                {this.props.classparam};\n                              </div>\n                              <div className=\"Indent-1\">i++;</div>\n                              <div className=\"Indent-0\">{RIGHT_CURLY}</div>\n                              <div className=\"Indent-0\">\n                                println(\n                                <p className=\"InputValue\">\n                                  {this.props.varName}\n                                </p>\n                                );\n                              </div>\n                            </div>\n                          </div>\n                          <div className=\"CodeContainer\">\n                            <div className=\"GreenCode\">\n                              <div className=\"Indent-0\">\n                                (while i != count) {LEFT_CURLY}\n                              </div>\n                              <div className=\"Indent-1\">\n                                {this.props.className}{\" \"}\n                                <p className=\"InputValue\">\n                                  {this.props.varName}\n                                </p>{\" \"}\n                                = new {this.props.className}\n                                {this.props.classparam};\n                              </div>\n                              <div className=\"Indent-1\">\n                                println(\n                                <p className=\"InputValue\">\n                                  {this.props.varName}\n                                </p>\n                                );\n                              </div>\n                              <div className=\"Indent-1\">i++;</div>\n                              <div className=\"Indent-0\">{RIGHT_CURLY}</div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                      <div>\n                        <div className=\"CodeExample\">\n                          <div className=\"CodeContainer\">\n                            <div className=\"RedCode\">\n                              <div className=\"Indent-0\">\n                                void setup(){LEFT_CURLY}\n                              </div>\n                              <div className=\"Indent-1\">\n                                {this.props.className}{\" \"}\n                                <p className=\"InputValue\">\n                                  {this.props.varName}\n                                </p>{\" \"}\n                                = new {this.props.className}\n                                {this.props.classparam};\n                              </div>\n                              <div className=\"Indent-1\">...</div>\n                              <div className=\"Indent-0\">{RIGHT_CURLY}</div>\n                              <div className=\"Indent-0\">\n                                void draw(){LEFT_CURLY}\n                              </div>\n                              <div className=\"Indent-1\">\n                                println(\n                                <p className=\"InputValue\">\n                                  {this.props.varName}\n                                </p>\n                                );\n                              </div>\n                              <div className=\"Indent-0\">{RIGHT_CURLY}</div>\n                            </div>\n                          </div>\n                          <div className=\"CodeContainer\">\n                            <div className=\"GreenCode\">\n                              <div className=\"Indent-0\">\n                                {this.props.className}{\" \"}\n                                <p className=\"InputValue\">\n                                  {this.props.varName}\n                                </p>\n                                ;\n                              </div>\n                              <div className=\"Indent-0\">\n                                void setup(){LEFT_CURLY}\n                              </div>\n                              <div className=\"Indent-1\">\n                                <p className=\"InputValue\">\n                                  {this.props.varName}\n                                </p>{\" \"}\n                                = new {this.props.className}\n                                {this.props.classparam};\n                              </div>\n                              <div className=\"Indent-1\">...</div>\n                              <div className=\"Indent-0\">{RIGHT_CURLY}</div>\n                              <div className=\"Indent-0\">\n                                void draw(){LEFT_CURLY}\n                              </div>\n                              <div className=\"Indent-1\">\n                                println(\n                                <p className=\"InputValue\">\n                                  {this.props.varName}\n                                </p>\n                                );\n                              </div>\n                              <div className=\"Indent-0\">{RIGHT_CURLY}</div>\n                            </div>\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  )}\n                </div>\n              </div>\n            )}\n          </div>\n          <ResourceFooter />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default VariableNotFound;\n","import React from \"react\";\nimport MinusButton from \"./assets/minus.svg\";\nimport PlusButton from \"./assets/plus.svg\";\nimport \"./App.css\";\nimport ResourceFooter from \"./ResourceFooter.jsx\";\n\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { blue } from \"@material-ui/core/colors\";\n\nconst BlueCheckbox = withStyles({\n  root: {\n    color: blue[400],\n    \"&$checked\": {\n      color: blue[600]\n    }\n  },\n  checked: {}\n})(props => <Checkbox color=\"default\" {...props} />);\n\nconst LEFT_CURLY = \"{\";\nconst RIGHT_CURLY = \"}\";\n\nclass TypeMismatch extends React.Component {\n  constructor(props) {\n    super(props);\n    this.openStrategyTile = this.openStrategyTile.bind(this);\n    this.openCodeExample = this.openCodeExample.bind(this);\n    this.changeChecked = this.changeChecked.bind(this);\n    this.state = {\n      openStrategy1: false,\n      openStrategy2: false,\n      openStrategy3: false,\n      openCode11: false,\n      openCode12: false,\n      openCode21: false,\n      openCode31: false,\n      checked11: false,\n      checked12: false,\n      checked21: false,\n      checked31: false\n    };\n  }\n\n  openStrategyTile(i) {\n    switch (i) {\n      case 1:\n        this.setState({ openStrategy1: !this.state.openStrategy1 });\n        this.setState({ openCode11: false });\n        this.setState({ openCode12: false });\n        break;\n      case 2:\n        this.setState({ openStrategy2: !this.state.openStrategy2 });\n        this.setState({ openCode21: false });\n        break;\n      case 3:\n        this.setState({ openStrategy3: !this.state.openStrategy3 });\n        this.setState({ openCode31: false });\n        break;\n      default:\n        break;\n    }\n  }\n\n  openCodeExample(i) {\n    switch (i) {\n      case 11:\n        this.setState({ openCode11: !this.state.openCode11 });\n        break;\n      case 12:\n        this.setState({ openCode12: !this.state.openCode12 });\n        break;\n      case 21:\n        this.setState({ openCode21: !this.state.openCode21 });\n        break;\n      case 31:\n        this.setState({ openCode31: !this.state.openCode31 });\n        break;\n      default:\n        break;\n    }\n  }\n\n  changeChecked(i) {\n    switch (i) {\n      case 11:\n        this.setState({ checked11: !this.state.checked11 });\n        break;\n      case 12:\n        this.setState({ checked12: !this.state.checked12 });\n        break;\n      case 21:\n        this.setState({ checked21: !this.state.checked21 });\n        break;\n      case 31:\n        this.setState({ checked31: !this.state.checked31 });\n        break;\n      default:\n        break;\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"AppContent\">\n          <div className=\"Title\">\n            <h2>\n              Cannot convert from float to int\n            </h2>\n          </div>\n\n          <h4>\n            <i>\n              Translation: You are trying to use the variable{\" \"}\n              <div className=\"InputValue\">{this.props.varName}</div> of type int but using it as a float-type variable.\n            </i>\n          </h4>\n\n          <div className=\"Tile\">\n            <div className=\"ErrorTile\" onClick={() => this.openStrategyTile(1)}>\n              <div className=\"ErrorMessage\">\n                <h4>\n                  1: You may have assigned a float value to variable{\" \"}\n                  <div className=\"InputValue\">{this.props.varName}</div>{\" \"}of type int\n                </h4>\n                <div>\n                  Hint: Do you want <p className=\"InputValue\">{this.props.varName}</p> to be a float type or int type?\n                </div>\n              </div>\n              {!this.state.openStrategy1 && (\n                <div className=\"ButtonHolder\">\n                  <img\n                    onClick={() => this.openStrategyTile(1)}\n                    src={PlusButton}\n                    alt=\"down-button\"\n                    width=\"20\"\n                    height=\"20\"\n                  ></img>\n                </div>\n              )}\n              {this.state.openStrategy1 && (\n                <div className=\"ButtonHolder\">\n                  <img\n                    onClick={() => this.openStrategyTile(1)}\n                    src={MinusButton}\n                    alt=\"up-button\"\n                    width=\"20\"\n                    height=\"20\"\n                  ></img>\n                </div>\n              )}\n            </div>\n\n            {this.state.openStrategy1 && (\n              <div className=\"StrategyContainer\">\n                <p>\n                  {\" \"}\n                  <i>Tick the box once you have tried the suggestion</i>\n                </p>\n                <div\n                  className=\"StrategyTile\"\n                  onClick={() => this.openCodeExample(11)}\n                >\n                  <div className=\"StrategyInstruction\">\n                    <div className=\"StrategyMessage\">\n                      <BlueCheckbox\n                        value=\"box1\"\n                        checked={this.state.checked11}\n                        onChange={() => this.changeChecked(11)}\n                      />\n                      <div className=\"Suggestion\">\n                        Suggestion 1: Change variable declaration of{\" \"}\n                        <p className=\"InputValue\">{this.props.varName}</p> to type float\n                      </div>\n                    </div>\n                    {!this.state.openCode11 && (\n                      <div className=\"ButtonHolder\">\n                        <img\n                          onClick={() => this.openCodeExample(11)}\n                          src={PlusButton}\n                          alt=\"down-button\"\n                          width=\"20\"\n                          height=\"20\"\n                        ></img>\n                      </div>\n                    )}\n                    {this.state.openCode11 && (\n                      <div className=\"ButtonHolder\">\n                        <img\n                          onClick={() => this.openCodeExample(11)}\n                          src={MinusButton}\n                          alt=\"up-button\"\n                          width=\"20\"\n                          height=\"20\"\n                        ></img>\n                      </div>\n                    )}\n                  </div>\n                  {this.state.openCode11 && (\n                    <div className=\"CodeExample\">\n                      <div className=\"CodeContainer\">\n                        <div className=\"RedCode\">\n                          <div className=\"Indent-0\"> int{\" \"}\n                            <p className=\"InputValue\">{this.props.varName}</p>{\" \"}\n                            = 3.14;\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"CodeContainer\">\n                        <div className=\"GreenCode\">\n                        <div className=\"Indent-0\"> float{\" \"}\n                            <p className=\"InputValue\">{this.props.varName}</p>{\" \"}\n                            = 3.14;\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  )}\n                </div>\n                \n                <div\n                  className=\"StrategyTile\"\n                  onClick={() => this.openCodeExample(12)}\n                >\n                  <div className=\"StrategyInstruction\">\n                    <div className=\"StrategyMessage\">\n                      <BlueCheckbox\n                        value=\"box1\"\n                        checked={this.state.checked12}\n                        onChange={() => this.changeChecked(12)}\n                      />\n                      <div className=\"Suggestion\">\n                        Suggestion 2: Change value of{\" \"}\n                        <p className=\"InputValue\">{this.props.varName}</p> to an int value\n                      </div>\n                    </div>\n                    {!this.state.openCode12 && (\n                      <div className=\"ButtonHolder\">\n                        <img\n                          onClick={() => this.openCodeExample(12)}\n                          src={PlusButton}\n                          alt=\"down-button\"\n                          width=\"20\"\n                          height=\"20\"\n                        ></img>\n                      </div>\n                    )}\n                    {this.state.openCode12 && (\n                      <div className=\"ButtonHolder\">\n                        <img\n                          onClick={() => this.openCodeExample(12)}\n                          src={MinusButton}\n                          alt=\"up-button\"\n                          width=\"20\"\n                          height=\"20\"\n                        ></img>\n                      </div>\n                    )}\n                  </div>\n                  {this.state.openCode12 && (\n                    <div className=\"CodeExample\">\n                      <div className=\"CodeContainer\">\n                        <div className=\"RedCode\">\n                          <div className=\"Indent-0\"> int{\" \"}\n                            <p className=\"InputValue\">{this.props.varName}</p>{\" \"}\n                            = 3.14;\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"CodeContainer\">\n                        <div className=\"GreenCode\">\n                        <div className=\"Indent-0\"> int{\" \"}\n                            <p className=\"InputValue\">{this.props.varName}</p>{\" \"}\n                            = 3;\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  )}\n                </div>\n \n              </div>\n            )}\n          </div>\n\n          <div className=\"Tile\">\n            <div className=\"ErrorTile\" onClick={() => this.openStrategyTile(2)}>\n              <div className=\"ErrorMessage\">\n                <h4>\n                  2: You may have used int-type variable{\" \"}\n                  <div className=\"InputValue\">{this.props.varName}</div>{\" \"} in an operation involving float type\n                </h4>\n                <div>\n                  Hint: Even if <div className=\"InputValue\">{this.props.varName}</div>{\" \"}has a int value, you need to declare it of float type\n                  to use it in a float operation.\n                </div>\n              </div>\n              {!this.state.openStrategy2 && (\n                <div className=\"ButtonHolder\">\n                  <img\n                    onClick={() => this.openStrategyTile(2)}\n                    src={PlusButton}\n                    alt=\"down-button\"\n                    width=\"20\"\n                    height=\"20\"\n                  ></img>\n                </div>\n              )}\n              {this.state.openStrategy2 && (\n                <div className=\"ButtonHolder\">\n                  <img\n                    onClick={() => this.openStrategyTile(2)}\n                    src={MinusButton}\n                    alt=\"up-button\"\n                    width=\"20\"\n                    height=\"20\"\n                  ></img>\n                </div>\n              )}\n            </div>\n            {this.state.openStrategy2 && (\n              <div className=\"StrategyContainer\">\n                <p>\n                  <i>Tick the box once you have tried the suggestion</i>\n                </p>\n                <div\n                  className=\"StrategyTile\"\n                  onClick={() => this.openCodeExample(21)}\n                >\n                  <div className=\"StrategyInstruction\">\n                    <div className=\"StrategyMessage\">\n                      <BlueCheckbox\n                        value=\"box1\"\n                        checked={this.state.checked21}\n                        onChange={() => this.changeChecked(21)}\n                      />\n                      <div className=\"Suggestion\">\n                        Suggestion 1: Change variable declatation of{\" \"}\n                        <p className=\"InputValue\">{this.props.varName}</p> to type float\n                      </div>\n                    </div>\n                    {!this.state.openCode21 && (\n                      <div className=\"ButtonHolder\">\n                        <img\n                          onClick={() => this.openCodeExample(21)}\n                          src={PlusButton}\n                          alt=\"down-button\"\n                          width=\"20\"\n                          height=\"20\"\n                        ></img>\n                      </div>\n                    )}\n                    {this.state.openCode21 && (\n                      <div className=\"ButtonHolder\">\n                        <img\n                          onClick={() => this.openCodeExample(21)}\n                          src={MinusButton}\n                          alt=\"up-button\"\n                          width=\"20\"\n                          height=\"20\"\n                        ></img>\n                      </div>\n                    )}\n                  </div>\n                  {this.state.openCode21 && (\n                    <div className=\"CodeExample\">\n                      <div className=\"CodeContainer\">\n                      <div className=\"RedCode\">\n                          <div className=\"Indent-0\"> int{\" \"}\n                            <p className=\"InputValue\">{this.props.varName}</p>{\" \"}\n                            = 3;\n                          </div>\n                          <div className=\"Indent-0\">\n                            <p className=\"InputValue\">{this.props.varName}</p>{\" \"}\n                            = <p className=\"InputValue\">{this.props.varName}</p>{\" \"}* 3.14;\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"CodeContainer\">\n                        <div className=\"GreenCode\">\n                        <div className=\"Indent-0\"> float{\" \"}\n                            <p className=\"InputValue\">{this.props.varName}</p>{\" \"}\n                            = 3;\n                          </div>\n                          <div className=\"Indent-0\">\n                            <p className=\"InputValue\">{this.props.varName}</p>{\" \"}\n                            = <p className=\"InputValue\">{this.props.varName}</p>{\" \"}* 3.14;\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  )}\n                </div>\n              </div>\n            )}\n          </div>\n\n          <div className=\"Tile\">\n            <div className=\"ErrorTile\" onClick={() => this.openStrategyTile(3)}>\n              <div className=\"ErrorMessage\">\n                <h4>\n                  3: You may have returned a float value in a method that expects to return an int value\n                </h4>\n                <div>\n                  Hint: Did the actual return value match the expected return type?\n                </div>\n              </div>\n              {!this.state.openStrategy3 && (\n                <div className=\"ButtonHolder\">\n                  <img\n                    onClick={() => this.openStrategyTile(3)}\n                    src={PlusButton}\n                    alt=\"down-button\"\n                    width=\"20\"\n                    height=\"20\"\n                  ></img>\n                </div>\n              )}\n              {this.state.openStrategy3 && (\n                <div className=\"ButtonHolder\">\n                  <img\n                    onClick={() => this.openStrategyTile(3)}\n                    src={MinusButton}\n                    alt=\"up-button\"\n                    width=\"20\"\n                    height=\"20\"\n                  ></img>\n                </div>\n              )}\n            </div>\n            {this.state.openStrategy3 && (\n              <div className=\"StrategyContainer\">\n                <p>\n                  <i>Tick the box once you have tried the suggestion</i>\n                </p>\n                <div\n                  className=\"StrategyTile\"\n                  onClick={() => this.openCodeExample(31)}\n                >\n                  <div className=\"StrategyInstruction\">\n                    <div className=\"StrategyMessage\">\n                      <BlueCheckbox\n                        value=\"box1\"\n                        checked={this.state.checked31}\n                        onChange={() => this.changeChecked(31)}\n                      />\n                      <div className=\"Suggestion\">\n                        Suggestion 1: Change method expected return type to float type\n                      </div>\n                    </div>\n                    {!this.state.openCode31 && (\n                      <div className=\"ButtonHolder\">\n                        <img\n                          onClick={() => this.openCodeExample(31)}\n                          src={PlusButton}\n                          alt=\"down-button\"\n                          width=\"20\"\n                          height=\"20\"\n                        ></img>\n                      </div>\n                    )}\n                    {this.state.openCode31 && (\n                      <div className=\"ButtonHolder\">\n                        <img\n                          onClick={() => this.openCodeExample(31)}\n                          src={MinusButton}\n                          alt=\"up-button\"\n                          width=\"20\"\n                          height=\"20\"\n                        ></img>\n                      </div>\n                    )}\n                  </div>\n                  {this.state.openCode31 && (\n                    <div className=\"CodeExample\">\n                      <div className=\"CodeContainer\">\n                        <div className=\"RedCode\">\n                            <div className=\"Indent-0\">int pi() {LEFT_CURLY}</div>\n                          <div className=\"Indent-1\">float{\" \"}\n                            <p className=\"InputValue\">{this.props.varName}</p>{\" \"}\n                            = 3.14;\n                          </div>\n                          <div className=\"Indent-1\">return{\" \"}\n                            <p className=\"InputValue\">{this.props.varName}</p>;\n                          </div>\n                          <div className=\"Indent-0\">{RIGHT_CURLY}</div>\n                        </div>\n                      </div>\n                      <div className=\"CodeContainer\">\n                        <div className=\"GreenCode\">\n                        <div className=\"Indent-0\">float pi() {LEFT_CURLY}</div>\n                          <div className=\"Indent-1\">float{\" \"}\n                            <p className=\"InputValue\">{this.props.varName}</p>{\" \"}\n                            = 3.14;\n                          </div>\n                          <div className=\"Indent-1\">return{\" \"}\n                            <p className=\"InputValue\">{this.props.varName}</p>;\n                          </div>\n                          <div className=\"Indent-0\">{RIGHT_CURLY}</div>\n                        </div>\n                      </div>\n                    </div>\n                  )}\n                </div>\n              </div>\n            )}\n          </div>\n          <ResourceFooter />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default TypeMismatch;\n","import React from \"react\";\nimport MinusButton from \"./assets/minus.svg\";\nimport PlusButton from \"./assets/plus.svg\";\nimport \"./App.css\";\nimport ResourceFooter from \"./ResourceFooter.jsx\";\n\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { blue } from \"@material-ui/core/colors\";\n\nconst BlueCheckbox = withStyles({\n  root: {\n    color: blue[400],\n    \"&$checked\": {\n      color: blue[600],\n    },\n  },\n  checked: {},\n})((props) => <Checkbox color=\"default\" {...props} />);\n\nconst LEFT_CURLY = \"{\";\nconst RIGHT_CURLY = \"}\";\n\nclass VariableNotInit extends React.Component {\n  constructor(props) {\n    super(props);\n    this.openStrategyTile = this.openStrategyTile.bind(this);\n    this.openCodeExample = this.openCodeExample.bind(this);\n    this.changeChecked = this.changeChecked.bind(this);\n    this.state = {\n      openStrategy1: false,\n      openStrategy2: false,\n      openCode11: false,\n      openCode12: false,\n      openCode21: false,\n      checked11: false,\n      checked12: false,\n      checked21: false,\n    };\n  }\n\n  openStrategyTile(i) {\n    switch (i) {\n      case 1:\n        this.setState({ openStrategy1: !this.state.openStrategy1 });\n        this.setState({ openCode11: false });\n        this.setState({ openCode12: false });\n        break;\n      case 2:\n        this.setState({ openStrategy2: !this.state.openStrategy2 });\n        this.setState({ openCode21: false });\n        break;\n      default:\n        break;\n    }\n  }\n\n  openCodeExample(i) {\n    switch (i) {\n      case 11:\n        this.setState({ openCode11: !this.state.openCode11 });\n        break;\n      case 12:\n        this.setState({ openCode12: !this.state.openCode12 });\n        break;\n      case 21:\n        this.setState({ openCode21: !this.state.openCode21 });\n        break;\n      default:\n        break;\n    }\n  }\n\n  changeChecked(i) {\n    switch (i) {\n      case 11:\n        this.setState({ checked11: !this.state.checked11 });\n        break;\n      case 12:\n        this.setState({ checked12: !this.state.checked12 });\n        break;\n      case 21:\n        this.setState({ checked21: !this.state.checked21 });\n        break;\n      default:\n        break;\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"AppContent\">\n          <div className=\"Title\">\n            <h2>\n              The local variable{\" \"}\n              <p className=\"InputValue\">{this.props.varName}</p> may not have\n              been initialized\n            </h2>\n          </div>\n\n          <h4>\n            <i>\n              Translation: You are trying to use the variable{\" \"}\n              <div className=\"InputValue\">{this.props.varName}</div> before\n              properly giving it a value.\n            </i>\n          </h4>\n\n          <div className=\"Tile\">\n            <div className=\"ErrorTile\" onClick={() => this.openStrategyTile(1)}>\n              <div className=\"ErrorMessage\">\n                <h4>\n                  1: You may have declared variable{\" \"}\n                  <div className=\"InputValue\">{this.props.varName}</div> and\n                  used it before giving it a value\n                </h4>\n                <div>\n                  Hint: Did you assign a value to{\" \"}\n                  <p className=\"InputValue\">{this.props.varName}</p> ?\n                </div>\n              </div>\n              {!this.state.openStrategy1 && (\n                <div className=\"ButtonHolder\">\n                  <img\n                    onClick={() => this.openStrategyTile(1)}\n                    src={PlusButton}\n                    alt=\"down-button\"\n                    width=\"20\"\n                    height=\"20\"\n                  ></img>\n                </div>\n              )}\n              {this.state.openStrategy1 && (\n                <div className=\"ButtonHolder\">\n                  <img\n                    onClick={() => this.openStrategyTile(1)}\n                    src={MinusButton}\n                    alt=\"up-button\"\n                    width=\"20\"\n                    height=\"20\"\n                  ></img>\n                </div>\n              )}\n            </div>\n\n            {this.state.openStrategy1 && (\n              <div className=\"StrategyContainer\">\n                <p>\n                  {\" \"}\n                  <i>Tick the box once you have tried the suggestion</i>\n                </p>\n                <div\n                  className=\"StrategyTile\"\n                  onClick={() => this.openCodeExample(11)}\n                >\n                  <div className=\"StrategyInstruction\">\n                    <div className=\"StrategyMessage\">\n                      <BlueCheckbox\n                        value=\"box1\"\n                        checked={this.state.checked11}\n                        onChange={() => this.changeChecked(11)}\n                      />\n                      <div className=\"Suggestion\">\n                        Suggestion 1: Assign a value to{\" \"}\n                        <p className=\"InputValue\">{this.props.varName}</p> at\n                        declaration\n                      </div>\n                    </div>\n                    {!this.state.openCode11 && (\n                      <div className=\"ButtonHolder\">\n                        <img\n                          onClick={() => this.openCodeExample(11)}\n                          src={PlusButton}\n                          alt=\"down-button\"\n                          width=\"20\"\n                          height=\"20\"\n                        ></img>\n                      </div>\n                    )}\n                    {this.state.openCode11 && (\n                      <div className=\"ButtonHolder\">\n                        <img\n                          onClick={() => this.openCodeExample(11)}\n                          src={MinusButton}\n                          alt=\"up-button\"\n                          width=\"20\"\n                          height=\"20\"\n                        ></img>\n                      </div>\n                    )}\n                  </div>\n                  {this.state.openCode11 && (\n                    <div className=\"CodeExample\">\n                      <div className=\"CodeContainer\">\n                        <div className=\"RedCode\">\n                          <div className=\"Indent-0\">\n                            {\" \"}\n                            int{\" \"}\n                            <p className=\"InputValue\">{this.props.varName}</p>;\n                          </div>\n                          <div className=\"Indent-0\">\n                            <p className=\"InputValue\">{this.props.varName}</p>\n                            ++;\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"CodeContainer\">\n                        <div className=\"GreenCode\">\n                          <div className=\"Indent-0\">\n                            {\" \"}\n                            int{\" \"}\n                            <p className=\"InputValue\">{this.props.varName}</p> =\n                            3;\n                          </div>\n                          <div className=\"Indent-0\">\n                            <p className=\"InputValue\">{this.props.varName}</p>\n                            ++;\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  )}\n                </div>\n\n                <div\n                  className=\"StrategyTile\"\n                  onClick={() => this.openCodeExample(12)}\n                >\n                  <div className=\"StrategyInstruction\">\n                    <div className=\"StrategyMessage\">\n                      <BlueCheckbox\n                        value=\"box1\"\n                        checked={this.state.checked12}\n                        onChange={() => this.changeChecked(12)}\n                      />\n                      <div className=\"Suggestion\">\n                        Suggestion 2: Assign value to{\" \"}\n                        <p className=\"InputValue\">{this.props.varName}</p>{\" \"}\n                        before using it\n                      </div>\n                    </div>\n                    {!this.state.openCode12 && (\n                      <div className=\"ButtonHolder\">\n                        <img\n                          onClick={() => this.openCodeExample(12)}\n                          src={PlusButton}\n                          alt=\"down-button\"\n                          width=\"20\"\n                          height=\"20\"\n                        ></img>\n                      </div>\n                    )}\n                    {this.state.openCode12 && (\n                      <div className=\"ButtonHolder\">\n                        <img\n                          onClick={() => this.openCodeExample(12)}\n                          src={MinusButton}\n                          alt=\"up-button\"\n                          width=\"20\"\n                          height=\"20\"\n                        ></img>\n                      </div>\n                    )}\n                  </div>\n                  {this.state.openCode12 && (\n                    <div className=\"CodeExample\">\n                      <div className=\"CodeContainer\">\n                        <div className=\"RedCode\">\n                          <div className=\"Indent-0\">\n                            {\" \"}\n                            int{\" \"}\n                            <p className=\"InputValue\">{this.props.varName}</p>;\n                          </div>\n                          <div className=\"Indent-0\">\n                            <p className=\"InputValue\">{this.props.varName}</p>\n                            ++;\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"CodeContainer\">\n                        <div className=\"GreenCode\">\n                          <div className=\"Indent-0\">\n                            {\" \"}\n                            int{\" \"}\n                            <p className=\"InputValue\">{this.props.varName}</p>;\n                          </div>\n                          <div className=\"Indent-0\">\n                            <p className=\"InputValue\">{this.props.varName}</p> =\n                            3;\n                          </div>\n                          <div className=\"Indent-0\">\n                            <p className=\"InputValue\">{this.props.varName}</p>\n                            ++;\n                          </div>\n                        </div>\n                      </div>\n                    </div>\n                  )}\n                </div>\n              </div>\n            )}\n          </div>\n\n          <div className=\"Tile\">\n            <div className=\"ErrorTile\" onClick={() => this.openStrategyTile(2)}>\n              <div className=\"ErrorMessage\">\n                <h4>\n                  2: You may have initialized{\" \"}\n                  <div className=\"InputValue\">{this.props.varName}</div> and\n                  used it in different scopes\n                </h4>\n                <div>\n                  Hint: You remembered to assign a value to{\" \"}\n                  <div className=\"InputValue\">{this.props.varName}</div> but\n                  still got this error.\n                </div>\n              </div>\n              {!this.state.openStrategy2 && (\n                <div className=\"ButtonHolder\">\n                  <img\n                    onClick={() => this.openStrategyTile(2)}\n                    src={PlusButton}\n                    alt=\"down-button\"\n                    width=\"20\"\n                    height=\"20\"\n                  ></img>\n                </div>\n              )}\n              {this.state.openStrategy2 && (\n                <div className=\"ButtonHolder\">\n                  <img\n                    onClick={() => this.openStrategyTile(2)}\n                    src={MinusButton}\n                    alt=\"up-button\"\n                    width=\"20\"\n                    height=\"20\"\n                  ></img>\n                </div>\n              )}\n            </div>\n            {this.state.openStrategy2 && (\n              <div className=\"StrategyContainer\">\n                <p>\n                  <i>Tick the box once you have tried the suggestion</i>\n                </p>\n                <div\n                  className=\"StrategyTile\"\n                  onClick={() => this.openCodeExample(21)}\n                >\n                  <div className=\"StrategyInstruction\">\n                    <div className=\"StrategyMessage\">\n                      <BlueCheckbox\n                        value=\"box1\"\n                        checked={this.state.checked21}\n                        onChange={() => this.changeChecked(21)}\n                      />\n                      <div className=\"Suggestion\">\n                        Suggestion 1: Have variable assignment and variable\n                        usage of{\" \"}\n                        <p className=\"InputValue\">{this.props.varName}</p> in\n                        the same scope\n                      </div>\n                    </div>\n                    {!this.state.openCode21 && (\n                      <div className=\"ButtonHolder\">\n                        <img\n                          onClick={() => this.openCodeExample(21)}\n                          src={PlusButton}\n                          alt=\"down-button\"\n                          width=\"20\"\n                          height=\"20\"\n                        ></img>\n                      </div>\n                    )}\n                    {this.state.openCode21 && (\n                      <div className=\"ButtonHolder\">\n                        <img\n                          onClick={() => this.openCodeExample(21)}\n                          src={MinusButton}\n                          alt=\"up-button\"\n                          width=\"20\"\n                          height=\"20\"\n                        ></img>\n                      </div>\n                    )}\n                  </div>\n                  {this.state.openCode21 && (\n                    <div className=\"CodeExample\">\n                      <div className=\"CodeContainer\">\n                        <div className=\"RedCode\">\n                          <div className=\"Indent-0\">\n                            {\" \"}\n                            int{\" \"}\n                            <p className=\"InputValue\">{this.props.varName}</p>;\n                          </div>\n                          <div className=\"Indent-0\"> int cond = 0;</div>\n                          <div className=\"Indent-0\">\n                            {\" \"}\n                            if (cond == 0) {LEFT_CURLY}\n                          </div>\n                          <div className=\"Indent-1\">\n                            <p className=\"InputValue\">{this.props.varName}</p> =\n                            3;\n                          </div>\n                          <div className=\"Indent-0\">{RIGHT_CURLY}</div>\n                          <div className=\"Indent-0\">\n                            <p className=\"InputValue\">{this.props.varName}</p> ={\" \"}\n                            <p className=\"InputValue\">{this.props.varName}</p> +\n                            1;\n                          </div>\n                        </div>\n                      </div>\n                      <div className=\"CodeContainer\">\n                        <div className=\"GreenCode\">\n                          <div className=\"Indent-0\">\n                            {\" \"}\n                            int{\" \"}\n                            <p className=\"InputValue\">{this.props.varName}</p>;\n                          </div>\n                          <div className=\"Indent-0\"> int cond = 0;</div>\n                          <div className=\"Indent-0\">\n                            {\" \"}\n                            if (cond == 0) {LEFT_CURLY}\n                          </div>\n                          <div className=\"Indent-1\">\n                            <p className=\"InputValue\">{this.props.varName}</p> =\n                            3;\n                          </div>\n                          <div className=\"Indent-1\">\n                            <p className=\"InputValue\">{this.props.varName}</p> ={\" \"}\n                            <p className=\"InputValue\">{this.props.varName}</p> +\n                            1;\n                          </div>\n                          <div className=\"Indent-0\">{RIGHT_CURLY}</div>\n                        </div>\n                      </div>\n                    </div>\n                  )}\n                </div>\n              </div>\n            )}\n          </div>\n\n          <ResourceFooter />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default VariableNotInit;\n","import React from \"react\";\nimport MinusButton from \"./assets/minus.svg\";\nimport PlusButton from \"./assets/plus.svg\";\nimport \"./App.css\";\nimport ResourceFooter from \"./ResourceFooter.jsx\";\n\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { blue } from \"@material-ui/core/colors\";\n\nimport { Link } from \"react-router-dom\";\n\nconst BlueCheckbox = withStyles({\n  root: {\n    color: blue[400],\n    \"&$checked\": {\n      color: blue[600],\n    },\n  },\n  checked: {},\n})((props) => <Checkbox color=\"default\" {...props} />);\n\nconst LEFT_CURLY = \"{\";\nconst RIGHT_CURLY = \"}\";\nclass ParameterMismatch extends React.Component {\n  constructor(props) {\n    super(props);\n    this.openStrategyTile = this.openStrategyTile.bind(this);\n    this.openCodeExample = this.openCodeExample.bind(this);\n    this.changeChecked = this.changeChecked.bind(this);\n    this.state = {\n      openStrategy1: false,\n      openStrategy2: false,\n      openCode11: false,\n      openCode12: false,\n      openCode21: false,\n      openCode22: false,\n      checked11: false,\n      checked12: false,\n      checked21: false,\n      checked22: false,\n    };\n  }\n\n  openStrategyTile(i) {\n    switch (i) {\n      case 1:\n        this.setState({ openStrategy1: !this.state.openStrategy1 });\n        this.setState({ openCode11: false });\n        this.setState({ openCode12: false });\n        break;\n      case 2:\n        this.setState({ openStrategy2: !this.state.openStrategy2 });\n        this.setState({ openCode21: false });\n        this.setState({ openCode22: false });\n        break;\n      default:\n        break;\n    }\n  }\n\n  openCodeExample(i) {\n    switch (i) {\n      case 11:\n        this.setState({ openCode11: !this.state.openCode11 });\n        break;\n      case 12:\n        this.setState({ openCode12: !this.state.openCode12 });\n        break;\n      case 21:\n        this.setState({ openCode21: !this.state.openCode21 });\n        break;\n      case 22:\n        this.setState({ openCode22: !this.state.openCode22 });\n        break;\n      default:\n        break;\n    }\n  }\n\n  changeChecked(i) {\n    switch (i) {\n      case 11:\n        this.setState({ checked11: !this.state.checked11 });\n        break;\n      case 12:\n        this.setState({ checked12: !this.state.checked12 });\n        break;\n      case 21:\n        this.setState({ checked21: !this.state.checked21 });\n        break;\n      case 22:\n        this.setState({ checked22: !this.state.checked22 });\n        break;\n      default:\n        break;\n    }\n  }\n\n  renderRecommender() {\n    return (\n      <div className=\"Recommender\">\n        <h4>\n          <i>Relating errors</i>\n        </h4>\n        <div className=\"Indent-1\">\n          <Link to=\"/typemismatch?varname=thing\">Type Mismatch</Link>\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"AppContent\">\n          <div className=\"Title\">\n            <h2>\n              The function “\n              <div className=\"InputValue\">{this.props.className}()</div>”\n              expects parameters like: \"\n              <div className=\"InputValue\">\n                {this.props.className}\n                (int)\n              </div>\n              ”\n            </h2>\n          </div>\n\n          <h4>\n            <i>\n              Translation: You are trying to use the function “\n              <div className=\"InputValue\">{this.props.className}</div>” but\n              using some incorrect forms of parameters.\n            </i>\n          </h4>\n\n          <div className=\"Tile\">\n            <div className=\"ErrorTile\" onClick={() => this.openStrategyTile(1)}>\n              <div className=\"ErrorMessage\">\n                <h4>\n                  1: You may have used the wrong type of parameters instead of\n                  expected type (int)\n                </h4>\n                <div>\n                  Hint: Is the parameter of your function{\" \"}\n                  <p className=\"InputValue\">{this.props.varName}</p> of type{\" \"}\n                  (int)?\n                </div>\n              </div>\n              {!this.state.openStrategy1 && (\n                <div className=\"ButtonHolder\">\n                  <img\n                    onClick={() => this.openStrategyTile(1)}\n                    src={PlusButton}\n                    alt=\"down-button\"\n                    width=\"20\"\n                    height=\"20\"\n                  ></img>\n                </div>\n              )}\n              {this.state.openStrategy1 && (\n                <div className=\"ButtonHolder\">\n                  <img\n                    onClick={() => this.openStrategyTile(1)}\n                    src={MinusButton}\n                    alt=\"up-button\"\n                    width=\"20\"\n                    height=\"20\"\n                  ></img>\n                </div>\n              )}\n            </div>\n\n            {this.state.openStrategy1 && (\n              <div className=\"StrategyContainer\">\n                <p>\n                  {\" \"}\n                  <i>Tick the box once you have tried the suggestion</i>\n                </p>\n                <div\n                  className=\"StrategyTile\"\n                  onClick={() => this.openCodeExample(11)}\n                >\n                  <div className=\"StrategyInstruction\">\n                    <div className=\"StrategyMessage\">\n                      <BlueCheckbox\n                        value=\"box1\"\n                        checked={this.state.checked11}\n                        onChange={() => this.changeChecked(11)}\n                      />\n                      <div className=\"Suggestion\">\n                        Suggestion 1: Change parameter of{\" \"}\n                        <p className=\"InputValue\">{this.props.className}</p> to\n                        type (int)\n                      </div>\n                    </div>\n                    {!this.state.openCode11 && (\n                      <div className=\"ButtonHolder\">\n                        <img\n                          onClick={() => this.openCodeExample(11)}\n                          src={PlusButton}\n                          alt=\"down-button\"\n                          width=\"20\"\n                          height=\"20\"\n                        ></img>\n                      </div>\n                    )}\n                    {this.state.openCode11 && (\n                      <div className=\"ButtonHolder\">\n                        <img\n                          onClick={() => this.openCodeExample(11)}\n                          src={MinusButton}\n                          alt=\"up-button\"\n                          width=\"20\"\n                          height=\"20\"\n                        ></img>\n                      </div>\n                    )}\n                  </div>\n                  {this.state.openCode11 && (\n                    <div className=\"CodeExample\">\n                      <div className=\"CodeContainer\">\n                        <div className=\"RedCode\">\n                          <div className=\"Indent-0\">\n                            void setup() {LEFT_CURLY}\n                          </div>\n                          <div className=\"Indent-1\">\n                            {this.props.className}\n                            (\"2\");\n                          </div>\n                          <div className=\"Indent-0\">{RIGHT_CURLY}</div>\n                          <div className=\"Indent-0\">\n                            void {this.props.className}(int s){LEFT_CURLY}\n                          </div>\n                          <div className=\"Indent-1\"> println(s+1);</div>\n                          <div className=\"Indent-0\">{RIGHT_CURLY}</div>\n                        </div>\n                      </div>\n                      <div className=\"CodeContainer\">\n                        <div className=\"GreenCode\">\n                          <div className=\"Indent-0\">\n                            void setup() {LEFT_CURLY}\n                          </div>\n                          <div className=\"Indent-1\">\n                            {this.props.className}\n                            (2);\n                          </div>\n                          <div className=\"Indent-0\">{RIGHT_CURLY}</div>\n                          <div className=\"Indent-0\">\n                            void {this.props.className}(int s){LEFT_CURLY}\n                          </div>\n                          <div className=\"Indent-1\"> println(s+1);</div>\n                          <div className=\"Indent-0\">{RIGHT_CURLY}</div>\n                        </div>\n                      </div>\n                    </div>\n                  )}\n                </div>\n                <div\n                  className=\"StrategyTile\"\n                  onClick={() => this.openCodeExample(12)}\n                >\n                  <div className=\"StrategyInstruction\">\n                    <div className=\"StrategyMessage\">\n                      <BlueCheckbox\n                        value=\"box1\"\n                        checked={this.state.checked12}\n                        onChange={() => this.changeChecked(12)}\n                      />\n                      <div className=\"Suggestion\">\n                        Suggestion 2: Change parameter of{\" \"}\n                        <p className=\"InputValue\">{this.props.className} </p> in\n                        function definition to match its usage\n                      </div>\n                    </div>\n                    {!this.state.openCode12 && (\n                      <div className=\"ButtonHolder\">\n                        <img\n                          onClick={() => this.openCodeExample(12)}\n                          src={PlusButton}\n                          alt=\"down-button\"\n                          width=\"20\"\n                          height=\"20\"\n                        ></img>\n                      </div>\n                    )}\n                    {this.state.openCode12 && (\n                      <div className=\"ButtonHolder\">\n                        <img\n                          onClick={() => this.openCodeExample(12)}\n                          src={MinusButton}\n                          alt=\"up-button\"\n                          width=\"20\"\n                          height=\"20\"\n                        ></img>\n                      </div>\n                    )}\n                  </div>\n                  {this.state.openCode12 && (\n                    <div className=\"CodeExample\">\n                      <div className=\"CodeContainer\">\n                        <div className=\"RedCode\">\n                          <div className=\"Indent-0\">\n                            void setup() {LEFT_CURLY}\n                          </div>\n                          <div className=\"Indent-1\">\n                            {this.props.className}\n                            (2.5);\n                          </div>\n                          <div className=\"Indent-0\">{RIGHT_CURLY}</div>\n                          <div className=\"Indent-0\">\n                            void {this.props.className}(int s){LEFT_CURLY}\n                          </div>\n                          <div className=\"Indent-1\"> println(s+1);</div>\n                          <div className=\"Indent-0\">{RIGHT_CURLY}</div>\n                        </div>\n                      </div>\n                      <div className=\"CodeContainer\">\n                        <div className=\"GreenCode\">\n                          <div className=\"Indent-0\">\n                            void setup() {LEFT_CURLY}\n                          </div>\n                          <div className=\"Indent-1\">\n                            {this.props.className}\n                            (2.5);\n                          </div>\n                          <div className=\"Indent-0\">{RIGHT_CURLY}</div>\n                          <div className=\"Indent-0\">\n                            void {this.props.className}(float s){LEFT_CURLY}\n                          </div>\n                          <div className=\"Indent-1\"> println(s+1);</div>\n                          <div className=\"Indent-0\">{RIGHT_CURLY}</div>\n                        </div>\n                      </div>\n                    </div>\n                  )}\n                </div>\n              </div>\n            )}\n          </div>\n\n          <div className=\"Tile\">\n            <div className=\"ErrorTile\" onClick={() => this.openStrategyTile(2)}>\n              <div className=\"ErrorMessage\">\n                <h4>2: You may have used the wrong number of parameters</h4>\n                <div>\n                  Hint: Do you use the matching number of parameters required\n                  for the function{\" \"}\n                  <p className=\"InputValue\">{this.props.className}</p>?\n                </div>\n              </div>\n              {!this.state.openStrategy2 && (\n                <div className=\"ButtonHolder\">\n                  <img\n                    onClick={() => this.openStrategyTile(2)}\n                    src={PlusButton}\n                    alt=\"down-button\"\n                    width=\"20\"\n                    height=\"20\"\n                  ></img>\n                </div>\n              )}\n              {this.state.openStrategy2 && (\n                <div className=\"ButtonHolder\">\n                  <img\n                    onClick={() => this.openStrategyTile(2)}\n                    src={MinusButton}\n                    alt=\"up-button\"\n                    width=\"20\"\n                    height=\"20\"\n                  ></img>\n                </div>\n              )}\n            </div>\n            {this.state.openStrategy2 && (\n              <div className=\"StrategyContainer\">\n                <p>\n                  <i>Tick the box once you have tried the suggestion</i>\n                </p>\n                <div\n                  className=\"StrategyTile\"\n                  onClick={() => this.openCodeExample(21)}\n                >\n                  <div className=\"StrategyInstruction\">\n                    <div className=\"StrategyMessage\">\n                      <BlueCheckbox\n                        value=\"box1\"\n                        checked={this.state.checked21}\n                        onChange={() => this.changeChecked(21)}\n                      />\n                      <div className=\"Suggestion\">\n                        Suggestion 1: Change the number of parameters of{\" \"}\n                        <p className=\"InputValue\">{this.props.className}</p> to\n                        match the requirement\n                      </div>\n                    </div>\n                    {!this.state.openCode21 && (\n                      <div className=\"ButtonHolder\">\n                        <img\n                          onClick={() => this.openCodeExample(21)}\n                          src={PlusButton}\n                          alt=\"down-button\"\n                          width=\"20\"\n                          height=\"20\"\n                        ></img>\n                      </div>\n                    )}\n                    {this.state.openCode21 && (\n                      <div className=\"ButtonHolder\">\n                        <img\n                          onClick={() => this.openCodeExample(21)}\n                          src={MinusButton}\n                          alt=\"up-button\"\n                          width=\"20\"\n                          height=\"20\"\n                        ></img>\n                      </div>\n                    )}\n                  </div>\n                  {this.state.openCode21 && (\n                    <div className=\"CodeExample\">\n                      <div className=\"CodeContainer\">\n                        <div className=\"RedCode\">\n                          <div className=\"Indent-0\">\n                            void setup() {LEFT_CURLY}\n                          </div>\n                          <div className=\"Indent-1\">\n                            {this.props.className}\n                            (1,2,3);\n                          </div>\n                          <div className=\"Indent-0\">{RIGHT_CURLY}</div>\n                          <div className=\"Indent-0\">\n                            void {this.props.className}(int s){LEFT_CURLY}\n                          </div>\n                          <div className=\"Indent-1\"> println(s+1);</div>\n                          <div className=\"Indent-0\">{RIGHT_CURLY}</div>\n                        </div>\n                      </div>\n                      <div className=\"CodeContainer\">\n                        <div className=\"GreenCode\">\n                          <div className=\"Indent-0\">\n                            void setup() {LEFT_CURLY}\n                          </div>\n                          <div className=\"Indent-1\">\n                            {this.props.className}\n                            (2);\n                          </div>\n                          <div className=\"Indent-0\">{RIGHT_CURLY}</div>\n                          <div className=\"Indent-0\">\n                            void {this.props.className}(int s){LEFT_CURLY}\n                          </div>\n                          <div className=\"Indent-1\"> println(s+1);</div>\n                          <div className=\"Indent-0\">{RIGHT_CURLY}</div>\n                        </div>\n                      </div>\n                    </div>\n                  )}\n                </div>\n                <div\n                  className=\"StrategyTile\"\n                  onClick={() => this.openCodeExample(22)}\n                >\n                  <div className=\"StrategyInstruction\">\n                    <div className=\"StrategyMessage\">\n                      <BlueCheckbox\n                        value=\"box1\"\n                        checked={this.state.checked22}\n                        onChange={() => this.changeChecked(22)}\n                      />\n                      <div className=\"Suggestion\">\n                        Suggestion 2: Change parameter of{\" \"}\n                        <p className=\"InputValue\">{this.props.className} </p> in\n                        function definition to match its usage\n                      </div>\n                    </div>\n                    {!this.state.openCode22 && (\n                      <div className=\"ButtonHolder\">\n                        <img\n                          onClick={() => this.openCodeExample(22)}\n                          src={PlusButton}\n                          alt=\"down-button\"\n                          width=\"20\"\n                          height=\"20\"\n                        ></img>\n                      </div>\n                    )}\n                    {this.state.openCode22 && (\n                      <div className=\"ButtonHolder\">\n                        <img\n                          onClick={() => this.openCodeExample(22)}\n                          src={MinusButton}\n                          alt=\"up-button\"\n                          width=\"20\"\n                          height=\"20\"\n                        ></img>\n                      </div>\n                    )}\n                  </div>\n                  {this.state.openCode22 && (\n                    <div className=\"CodeExample\">\n                      <div className=\"CodeContainer\">\n                        <div className=\"RedCode\">\n                          <div className=\"Indent-0\">\n                            void setup() {LEFT_CURLY}\n                          </div>\n                          <div className=\"Indent-1\">\n                            {this.props.className}\n                            (1,2,3);\n                          </div>\n                          <div className=\"Indent-0\">{RIGHT_CURLY}</div>\n                          <div className=\"Indent-0\">\n                            void {this.props.className}(int s){LEFT_CURLY}\n                          </div>\n                          <div className=\"Indent-1\"> println(s+1);</div>\n                          <div className=\"Indent-0\">{RIGHT_CURLY}</div>\n                        </div>\n                      </div>\n                      <div className=\"CodeContainer\">\n                        <div className=\"GreenCode\">\n                          <div className=\"Indent-0\">\n                            void setup() {LEFT_CURLY}\n                          </div>\n                          <div className=\"Indent-1\">\n                            {this.props.className}\n                            (1,2,3);\n                          </div>\n                          <div className=\"Indent-0\">{RIGHT_CURLY}</div>\n                          <div className=\"Indent-0\">\n                            void {this.props.className}(int s1, int s2, int s3)\n                            {LEFT_CURLY}\n                          </div>\n                          <div className=\"Indent-1\"> println(s1+1);</div>\n                          <div className=\"Indent-1\"> println(s2+1);</div>\n                          <div className=\"Indent-1\"> println(s3+1);</div>\n                          <div className=\"Indent-0\">{RIGHT_CURLY}</div>\n                        </div>\n                      </div>\n                    </div>\n                  )}\n                </div>\n              </div>\n            )}\n          </div>\n          <ResourceFooter />\n          {/* <this.renderRecommender /> */}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default ParameterMismatch;\n","import React from \"react\";\nimport \"./App.css\";\nimport {\n  BrowserRouter as Router,\n  Link,\n  Route,\n} from \"react-router-dom\";\n\n\nclass Home extends React.Component {\n    constructor(props) {\n      super(props);\n\n      this.state = {\n\n      };\n    }\n  \n\n    render() {\n\n\n  return (\n    <div>\n      <Route exact path=\"/\">\n        <div className=\"AppContent\">\n          <h4>Lists of tasks:</h4>\n          {this.props.id === '01' && (\n              <div>\n              <div className=\"Indent-1\">\n              <Link to=\"/variablenotfound0\">Drawing</Link>\n            </div>\n            <div className=\"Indent-1\">\n              <Link to=\"/variablenotfound1\">Movement</Link>\n            </div>\n              <div className=\"Indent-1\">\n              <Link to=\"/parametermismatch0\">Rectangle</Link>\n            </div>\n              <div className=\"Indent-1\">\n              <Link to=\"/parametermismatch2\">Ball</Link>\n            </div>\n            </div>\n          )}\n          {this.props.id === '02' && (\n              <div>\n                  <div className=\"Indent-1\">\n            <Link to=\"/variablenotfound0\">Movement</Link>\n          </div>\n          <div className=\"Indent-1\">\n            <Link to=\"/variablenotfound2\">Drawing</Link>\n          </div>\n          <div className=\"Indent-1\">\n            <Link to=\"/parametermismatch0\">Rectangle</Link>\n          </div>\n          <div className=\"Indent-1\">\n            <Link to=\"/parametermismatch1\">Ball</Link>\n          </div>\n            </div>\n          )}\n          {this.props.id === '03' && (\n              <div>\n                   <div className=\"Indent-1\">\n            <Link to=\"/variablenotfound0\">Drawing </Link>\n          </div>\n          <div className=\"Indent-1\">\n            <Link to=\"/variablenotfound1\">Movement</Link>\n          </div>\n          <div className=\"Indent-1\">\n            <Link to=\"/parametermismatch0\">Rectangle</Link>\n          </div>\n          <div className=\"Indent-1\">\n            <Link to=\"/parametermismatch1\">Ball</Link>\n          </div>\n                  </div>\n          )}\n          {this.props.id === '04' && (\n              <div>\n<div className=\"Indent-1\">\n            <Link to=\"/variablenotfound0\">Movement </Link>\n          </div>\n\n          <div className=\"Indent-1\">\n            <Link to=\"/variablenotfound2\">Drawing</Link>\n          </div>\n          <div className=\"Indent-1\">\n            <Link to=\"/parametermismatch0\">Ball</Link>\n          </div>\n          <div className=\"Indent-1\">\n            <Link to=\"/parametermismatch2\">Rectangle</Link>\n          </div>\n                  </div>\n          )}\n          {/* <div className=\"Indent-1\">\n            <Link to=\"/parametermismatch0\">Parameter Mismatch 0</Link>\n          </div>\n          <div className=\"Indent-1\">\n            <Link to=\"/parametermismatch1\">Parameter Mismatch 1</Link>\n          </div>\n          <div className=\"Indent-1\">\n            <Link to=\"/parametermismatch2\">Parameter Mismatch 2</Link>\n          </div>\n          <div className=\"Indent-1\">\n            <Link to=\"/returnmissing?classname=func&returntype=int\">\n              Return Statement Missing\n            </Link>\n          </div>\n          <div className=\"Indent-1\">\n            <Link to=\"/typemismatch?varname=thing\">Type Mismatch</Link>\n          </div>\n          <div className=\"Indent-1\">\n            <Link to=\"/typenotfound\">Type Not Found</Link>\n          </div>\n          <div className=\"Indent-1\">\n            <Link to=\"/variablenotfound0\">Variable Not Found </Link>\n          </div>\n          <div className=\"Indent-1\">\n            <Link to=\"/variablenotfound1\">Variable Not Found 1</Link>\n          </div>\n          <div className=\"Indent-1\">\n            <Link to=\"/variablenotfound2\">Variable Not Found 2</Link>\n          </div>\n          <div className=\"Indent-1\">\n            <Link to=\"/variablenotinit?varname=thing\">\n              Variable Not Initialized\n            </Link>\n          </div> */}\n        </div>\n      </Route>\n\n      \n    </div>\n  );\n    }\n}\n\nexport default Home;","import React from \"react\";\nimport \"./App.css\";\nimport {\n  BrowserRouter as Router,\n  Link,\n  Route,\n  useLocation,\n} from \"react-router-dom\";\nimport ReturnMissing from \"./ReturnMissing\";\nimport TypeNotFound from \"./TypeNotFound\";\nimport VariableNotFound from \"./VariableNotFound\";\nimport TypeMismatch from \"./TypeMismatch\";\nimport VariableNotInit from \"./VariableNotInit\";\nimport ParameterMismatch from \"./ParameterMismatch\";\nimport Home from \"./Home\";\nimport HomeButton from \"./assets/home.svg\";\n\nexport default function App() {\n  return (\n    <Router>\n      <HomePageContent />\n    </Router>\n  );\n}\n\nfunction useQuery() {\n  return new URLSearchParams(useLocation().search);\n}\n\nfunction HomePageContent() {\n  let query = useQuery();\n\n  return (\n    <div>\n      <div className=\"Home\">\n        <Link to=\"/\">\n          <img src={HomeButton} alt=\"home-button\" width=\"30\" height=\"30\"></img>\n        </Link>\n      </div>\n      <Route exact path=\"/\">\n        <Home id={query.get(\"id\") || \"01\"} />\n      </Route>\n      <Route exact path=\"/parametermismatch0\">\n        <ParameterMismatch\n          className={query.get(\"classname\") || \"doSomething\"}\n        />\n      </Route>\n\n      <Route exact path=\"/parametermismatch1\">\n        <ParameterMismatch className={query.get(\"classname\") || \"segment\"} />\n      </Route>\n\n      <Route exact path=\"/parametermismatch2\">\n        <ParameterMismatch className={query.get(\"classname\") || \"overRect\"} />\n      </Route>\n\n      <Route exact path=\"/returnmissing\">\n        <ReturnMissing\n          className={query.get(\"classname\") || \"func\"}\n          returnType={query.get(\"classparam\") || \"int\"}\n        />\n      </Route>\n\n      <Route exact path=\"/typenotfound\">\n        <TypeNotFound\n          className={query.get(\"classname\") || \"Thing\"}\n          correctName={query.get(\"correctname\") || \"CorrectName\"}\n          varName={query.get(\"varname\") || \"thing\"}\n        />\n      </Route>\n\n      <Route exact path=\"/typemismatch\">\n        <TypeMismatch varName={query.get(\"varname\") || \"thing\"} />\n      </Route>\n\n      <Route exact path=\"/variablenotfound0\">\n        <VariableNotFound\n          varName={query.get(\"varname\") || \"thing\"}\n          className={query.get(\"classname\") || \"Thing\"}\n          classparam={query.get(\"classparam\") || \"()\"}\n        />\n      </Route>\n\n      <Route exact path=\"/variablenotfound1\">\n        <VariableNotFound\n          varName={query.get(\"varname\") || \"gravity\"}\n          className={query.get(\"classname\") || \"PVector\"}\n          classparam={query.get(\"classparam\") || \"(0,0.2)\"}\n        />\n      </Route>\n\n      <Route exact path=\"/variablenotfound2\">\n        <VariableNotFound\n          varName={query.get(\"varname\") || \"xCoordirnate\"}\n          className={query.get(\"classname\") || \"float[num]\"}\n          classparam={query.get(\"classparam\") || \"\"}\n        />\n      </Route>\n\n      <Route exact path=\"/variablenotinit\">\n        <VariableNotInit varName={query.get(\"varname\") || \"thing\"} />\n      </Route>\n    </div>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}